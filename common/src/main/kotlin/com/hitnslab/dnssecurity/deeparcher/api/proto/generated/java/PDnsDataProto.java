// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/hitnslab/dnssecurity/deeparcher/api/proto/pdns_data.proto

package com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java;

public final class PDnsDataProto {
  private PDnsDataProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PDnsDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.hitnslab.dnssecurity.deeparcher.api.proto.PDnsData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Fully Qualified Domain Name (FQDN).
     * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
     * NOT NULL. 
     * </pre>
     *
     * <code>string fqdn = 1;</code>
     * @return The fqdn.
     */
    java.lang.String getFqdn();
    /**
     * <pre>
     * Fully Qualified Domain Name (FQDN).
     * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
     * NOT NULL. 
     * </pre>
     *
     * <code>string fqdn = 1;</code>
     * @return The bytes for fqdn.
     */
    com.google.protobuf.ByteString
        getFqdnBytes();

    /**
     * <pre>
     * Top private domain.
     * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
     * &#64;see [InternetDomainNameExplained](https://github.com/google/guava/wiki/InternetDomainNameExplained)
     * NOT NULL. 
     * </pre>
     *
     * <code>string domain = 2;</code>
     * @return The domain.
     */
    java.lang.String getDomain();
    /**
     * <pre>
     * Top private domain.
     * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
     * &#64;see [InternetDomainNameExplained](https://github.com/google/guava/wiki/InternetDomainNameExplained)
     * NOT NULL. 
     * </pre>
     *
     * <code>string domain = 2;</code>
     * @return The bytes for domain.
     */
    com.google.protobuf.ByteString
        getDomainBytes();

    /**
     * <pre>
     * Client IP addresses.
     * IP addresses are represented by concatenated big endian bytes.
     * The length of this field should be multiple of 4.
     * NULLABLE. 
     * </pre>
     *
     * <code>bytes client_ip = 3;</code>
     * @return The clientIp.
     */
    com.google.protobuf.ByteString getClientIp();

    /**
     * <pre>
     * Timestamp of DNS query
     * NOT NULL. 
     * </pre>
     *
     * <code>int64 q_time = 4;</code>
     * @return The qTime.
     */
    long getQTime();

    /**
     * <pre>
     * Type of DNS query
     * &#64;see [DNS Parameters](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml)
     * NOT NULL. 
     * </pre>
     *
     * <code>int32 q_type = 5;</code>
     * @return The qType.
     */
    int getQType();

    /**
     * <pre>
     * Response code in DNS response
     * &#64;see [DNS Parameters](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml)
     * NOT NULL. 
     * </pre>
     *
     * <code>int32 r_code = 6;</code>
     * @return The rCode.
     */
    int getRCode();

    /**
     * <pre>
     * IPv4 addresses (A record) in DNS response.
     * IP addresses are represented by concatenated big endian bytes.
     * The length of this field should be multiple of 4.
     * NULLABLE. 
     * </pre>
     *
     * <code>bytes r_ipv4_addrs = 7;</code>
     * @return The rIpv4Addrs.
     */
    com.google.protobuf.ByteString getRIpv4Addrs();

    /**
     * <pre>
     * IPv6 addresses (AAAA record) in DNS response.
     * IP addresses are represented by concatenated big endian bytes.
     * The length of this field should be multiple of 16.
     * NULLABLE. 
     * </pre>
     *
     * <code>bytes r_ipv6_addrs = 8;</code>
     * @return The rIpv6Addrs.
     */
    com.google.protobuf.ByteString getRIpv6Addrs();

    /**
     * <pre>
     * CNAMEs in DNS response.
     * NULLABLE. 
     * </pre>
     *
     * <code>repeated string r_cnames = 9;</code>
     * @return A list containing the rCnames.
     */
    java.util.List<java.lang.String>
        getRCnamesList();
    /**
     * <pre>
     * CNAMEs in DNS response.
     * NULLABLE. 
     * </pre>
     *
     * <code>repeated string r_cnames = 9;</code>
     * @return The count of rCnames.
     */
    int getRCnamesCount();
    /**
     * <pre>
     * CNAMEs in DNS response.
     * NULLABLE. 
     * </pre>
     *
     * <code>repeated string r_cnames = 9;</code>
     * @param index The index of the element to return.
     * @return The rCnames at the given index.
     */
    java.lang.String getRCnames(int index);
    /**
     * <pre>
     * CNAMEs in DNS response.
     * NULLABLE. 
     * </pre>
     *
     * <code>repeated string r_cnames = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the rCnames at the given index.
     */
    com.google.protobuf.ByteString
        getRCnamesBytes(int index);
  }
  /**
   * <pre>
   * Message type for passive DNS data. 
   * </pre>
   *
   * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.PDnsData}
   */
  public  static final class PDnsData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.PDnsData)
      PDnsDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PDnsData.newBuilder() to construct.
    private PDnsData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PDnsData() {
      fqdn_ = "";
      domain_ = "";
      clientIp_ = com.google.protobuf.ByteString.EMPTY;
      rIpv4Addrs_ = com.google.protobuf.ByteString.EMPTY;
      rIpv6Addrs_ = com.google.protobuf.ByteString.EMPTY;
      rCnames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PDnsData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PDnsData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              fqdn_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              domain_ = s;
              break;
            }
            case 26: {

              clientIp_ = input.readBytes();
              break;
            }
            case 32: {

              qTime_ = input.readInt64();
              break;
            }
            case 40: {

              qType_ = input.readInt32();
              break;
            }
            case 48: {

              rCode_ = input.readInt32();
              break;
            }
            case 58: {

              rIpv4Addrs_ = input.readBytes();
              break;
            }
            case 66: {

              rIpv6Addrs_ = input.readBytes();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rCnames_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              rCnames_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rCnames_ = rCnames_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_PDnsData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_PDnsData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData.Builder.class);
    }

    public static final int FQDN_FIELD_NUMBER = 1;
    private volatile java.lang.Object fqdn_;
    /**
     * <pre>
     * Fully Qualified Domain Name (FQDN).
     * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
     * NOT NULL. 
     * </pre>
     *
     * <code>string fqdn = 1;</code>
     * @return The fqdn.
     */
    public java.lang.String getFqdn() {
      java.lang.Object ref = fqdn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fqdn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Fully Qualified Domain Name (FQDN).
     * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
     * NOT NULL. 
     * </pre>
     *
     * <code>string fqdn = 1;</code>
     * @return The bytes for fqdn.
     */
    public com.google.protobuf.ByteString
        getFqdnBytes() {
      java.lang.Object ref = fqdn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fqdn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOMAIN_FIELD_NUMBER = 2;
    private volatile java.lang.Object domain_;
    /**
     * <pre>
     * Top private domain.
     * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
     * &#64;see [InternetDomainNameExplained](https://github.com/google/guava/wiki/InternetDomainNameExplained)
     * NOT NULL. 
     * </pre>
     *
     * <code>string domain = 2;</code>
     * @return The domain.
     */
    public java.lang.String getDomain() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domain_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Top private domain.
     * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
     * &#64;see [InternetDomainNameExplained](https://github.com/google/guava/wiki/InternetDomainNameExplained)
     * NOT NULL. 
     * </pre>
     *
     * <code>string domain = 2;</code>
     * @return The bytes for domain.
     */
    public com.google.protobuf.ByteString
        getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_IP_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString clientIp_;
    /**
     * <pre>
     * Client IP addresses.
     * IP addresses are represented by concatenated big endian bytes.
     * The length of this field should be multiple of 4.
     * NULLABLE. 
     * </pre>
     *
     * <code>bytes client_ip = 3;</code>
     * @return The clientIp.
     */
    public com.google.protobuf.ByteString getClientIp() {
      return clientIp_;
    }

    public static final int Q_TIME_FIELD_NUMBER = 4;
    private long qTime_;
    /**
     * <pre>
     * Timestamp of DNS query
     * NOT NULL. 
     * </pre>
     *
     * <code>int64 q_time = 4;</code>
     * @return The qTime.
     */
    public long getQTime() {
      return qTime_;
    }

    public static final int Q_TYPE_FIELD_NUMBER = 5;
    private int qType_;
    /**
     * <pre>
     * Type of DNS query
     * &#64;see [DNS Parameters](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml)
     * NOT NULL. 
     * </pre>
     *
     * <code>int32 q_type = 5;</code>
     * @return The qType.
     */
    public int getQType() {
      return qType_;
    }

    public static final int R_CODE_FIELD_NUMBER = 6;
    private int rCode_;
    /**
     * <pre>
     * Response code in DNS response
     * &#64;see [DNS Parameters](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml)
     * NOT NULL. 
     * </pre>
     *
     * <code>int32 r_code = 6;</code>
     * @return The rCode.
     */
    public int getRCode() {
      return rCode_;
    }

    public static final int R_IPV4_ADDRS_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString rIpv4Addrs_;
    /**
     * <pre>
     * IPv4 addresses (A record) in DNS response.
     * IP addresses are represented by concatenated big endian bytes.
     * The length of this field should be multiple of 4.
     * NULLABLE. 
     * </pre>
     *
     * <code>bytes r_ipv4_addrs = 7;</code>
     * @return The rIpv4Addrs.
     */
    public com.google.protobuf.ByteString getRIpv4Addrs() {
      return rIpv4Addrs_;
    }

    public static final int R_IPV6_ADDRS_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString rIpv6Addrs_;
    /**
     * <pre>
     * IPv6 addresses (AAAA record) in DNS response.
     * IP addresses are represented by concatenated big endian bytes.
     * The length of this field should be multiple of 16.
     * NULLABLE. 
     * </pre>
     *
     * <code>bytes r_ipv6_addrs = 8;</code>
     * @return The rIpv6Addrs.
     */
    public com.google.protobuf.ByteString getRIpv6Addrs() {
      return rIpv6Addrs_;
    }

    public static final int R_CNAMES_FIELD_NUMBER = 9;
    private com.google.protobuf.LazyStringList rCnames_;
    /**
     * <pre>
     * CNAMEs in DNS response.
     * NULLABLE. 
     * </pre>
     *
     * <code>repeated string r_cnames = 9;</code>
     * @return A list containing the rCnames.
     */
    public com.google.protobuf.ProtocolStringList
        getRCnamesList() {
      return rCnames_;
    }
    /**
     * <pre>
     * CNAMEs in DNS response.
     * NULLABLE. 
     * </pre>
     *
     * <code>repeated string r_cnames = 9;</code>
     * @return The count of rCnames.
     */
    public int getRCnamesCount() {
      return rCnames_.size();
    }
    /**
     * <pre>
     * CNAMEs in DNS response.
     * NULLABLE. 
     * </pre>
     *
     * <code>repeated string r_cnames = 9;</code>
     * @param index The index of the element to return.
     * @return The rCnames at the given index.
     */
    public java.lang.String getRCnames(int index) {
      return rCnames_.get(index);
    }
    /**
     * <pre>
     * CNAMEs in DNS response.
     * NULLABLE. 
     * </pre>
     *
     * <code>repeated string r_cnames = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the rCnames at the given index.
     */
    public com.google.protobuf.ByteString
        getRCnamesBytes(int index) {
      return rCnames_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFqdnBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, fqdn_);
      }
      if (!getDomainBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, domain_);
      }
      if (!clientIp_.isEmpty()) {
        output.writeBytes(3, clientIp_);
      }
      if (qTime_ != 0L) {
        output.writeInt64(4, qTime_);
      }
      if (qType_ != 0) {
        output.writeInt32(5, qType_);
      }
      if (rCode_ != 0) {
        output.writeInt32(6, rCode_);
      }
      if (!rIpv4Addrs_.isEmpty()) {
        output.writeBytes(7, rIpv4Addrs_);
      }
      if (!rIpv6Addrs_.isEmpty()) {
        output.writeBytes(8, rIpv6Addrs_);
      }
      for (int i = 0; i < rCnames_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, rCnames_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFqdnBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, fqdn_);
      }
      if (!getDomainBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, domain_);
      }
      if (!clientIp_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, clientIp_);
      }
      if (qTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, qTime_);
      }
      if (qType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, qType_);
      }
      if (rCode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, rCode_);
      }
      if (!rIpv4Addrs_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, rIpv4Addrs_);
      }
      if (!rIpv6Addrs_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, rIpv6Addrs_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rCnames_.size(); i++) {
          dataSize += computeStringSizeNoTag(rCnames_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRCnamesList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData)) {
        return super.equals(obj);
      }
      com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData other = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData) obj;

      if (!getFqdn()
          .equals(other.getFqdn())) return false;
      if (!getDomain()
          .equals(other.getDomain())) return false;
      if (!getClientIp()
          .equals(other.getClientIp())) return false;
      if (getQTime()
          != other.getQTime()) return false;
      if (getQType()
          != other.getQType()) return false;
      if (getRCode()
          != other.getRCode()) return false;
      if (!getRIpv4Addrs()
          .equals(other.getRIpv4Addrs())) return false;
      if (!getRIpv6Addrs()
          .equals(other.getRIpv6Addrs())) return false;
      if (!getRCnamesList()
          .equals(other.getRCnamesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FQDN_FIELD_NUMBER;
      hash = (53 * hash) + getFqdn().hashCode();
      hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getDomain().hashCode();
      hash = (37 * hash) + CLIENT_IP_FIELD_NUMBER;
      hash = (53 * hash) + getClientIp().hashCode();
      hash = (37 * hash) + Q_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getQTime());
      hash = (37 * hash) + Q_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getQType();
      hash = (37 * hash) + R_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getRCode();
      hash = (37 * hash) + R_IPV4_ADDRS_FIELD_NUMBER;
      hash = (53 * hash) + getRIpv4Addrs().hashCode();
      hash = (37 * hash) + R_IPV6_ADDRS_FIELD_NUMBER;
      hash = (53 * hash) + getRIpv6Addrs().hashCode();
      if (getRCnamesCount() > 0) {
        hash = (37 * hash) + R_CNAMES_FIELD_NUMBER;
        hash = (53 * hash) + getRCnamesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message type for passive DNS data. 
     * </pre>
     *
     * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.PDnsData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.PDnsData)
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_PDnsData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_PDnsData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData.Builder.class);
      }

      // Construct using com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        fqdn_ = "";

        domain_ = "";

        clientIp_ = com.google.protobuf.ByteString.EMPTY;

        qTime_ = 0L;

        qType_ = 0;

        rCode_ = 0;

        rIpv4Addrs_ = com.google.protobuf.ByteString.EMPTY;

        rIpv6Addrs_ = com.google.protobuf.ByteString.EMPTY;

        rCnames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_PDnsData_descriptor;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData getDefaultInstanceForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData.getDefaultInstance();
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData build() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData buildPartial() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData result = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData(this);
        int from_bitField0_ = bitField0_;
        result.fqdn_ = fqdn_;
        result.domain_ = domain_;
        result.clientIp_ = clientIp_;
        result.qTime_ = qTime_;
        result.qType_ = qType_;
        result.rCode_ = rCode_;
        result.rIpv4Addrs_ = rIpv4Addrs_;
        result.rIpv6Addrs_ = rIpv6Addrs_;
        if (((bitField0_ & 0x00000001) != 0)) {
          rCnames_ = rCnames_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.rCnames_ = rCnames_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData) {
          return mergeFrom((com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData other) {
        if (other == com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData.getDefaultInstance()) return this;
        if (!other.getFqdn().isEmpty()) {
          fqdn_ = other.fqdn_;
          onChanged();
        }
        if (!other.getDomain().isEmpty()) {
          domain_ = other.domain_;
          onChanged();
        }
        if (other.getClientIp() != com.google.protobuf.ByteString.EMPTY) {
          setClientIp(other.getClientIp());
        }
        if (other.getQTime() != 0L) {
          setQTime(other.getQTime());
        }
        if (other.getQType() != 0) {
          setQType(other.getQType());
        }
        if (other.getRCode() != 0) {
          setRCode(other.getRCode());
        }
        if (other.getRIpv4Addrs() != com.google.protobuf.ByteString.EMPTY) {
          setRIpv4Addrs(other.getRIpv4Addrs());
        }
        if (other.getRIpv6Addrs() != com.google.protobuf.ByteString.EMPTY) {
          setRIpv6Addrs(other.getRIpv6Addrs());
        }
        if (!other.rCnames_.isEmpty()) {
          if (rCnames_.isEmpty()) {
            rCnames_ = other.rCnames_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRCnamesIsMutable();
            rCnames_.addAll(other.rCnames_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object fqdn_ = "";
      /**
       * <pre>
       * Fully Qualified Domain Name (FQDN).
       * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
       * NOT NULL. 
       * </pre>
       *
       * <code>string fqdn = 1;</code>
       * @return The fqdn.
       */
      public java.lang.String getFqdn() {
        java.lang.Object ref = fqdn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fqdn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Fully Qualified Domain Name (FQDN).
       * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
       * NOT NULL. 
       * </pre>
       *
       * <code>string fqdn = 1;</code>
       * @return The bytes for fqdn.
       */
      public com.google.protobuf.ByteString
          getFqdnBytes() {
        java.lang.Object ref = fqdn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fqdn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Fully Qualified Domain Name (FQDN).
       * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
       * NOT NULL. 
       * </pre>
       *
       * <code>string fqdn = 1;</code>
       * @param value The fqdn to set.
       * @return This builder for chaining.
       */
      public Builder setFqdn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fqdn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fully Qualified Domain Name (FQDN).
       * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
       * NOT NULL. 
       * </pre>
       *
       * <code>string fqdn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFqdn() {
        
        fqdn_ = getDefaultInstance().getFqdn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fully Qualified Domain Name (FQDN).
       * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
       * NOT NULL. 
       * </pre>
       *
       * <code>string fqdn = 1;</code>
       * @param value The bytes for fqdn to set.
       * @return This builder for chaining.
       */
      public Builder setFqdnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fqdn_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object domain_ = "";
      /**
       * <pre>
       * Top private domain.
       * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
       * &#64;see [InternetDomainNameExplained](https://github.com/google/guava/wiki/InternetDomainNameExplained)
       * NOT NULL. 
       * </pre>
       *
       * <code>string domain = 2;</code>
       * @return The domain.
       */
      public java.lang.String getDomain() {
        java.lang.Object ref = domain_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          domain_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Top private domain.
       * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
       * &#64;see [InternetDomainNameExplained](https://github.com/google/guava/wiki/InternetDomainNameExplained)
       * NOT NULL. 
       * </pre>
       *
       * <code>string domain = 2;</code>
       * @return The bytes for domain.
       */
      public com.google.protobuf.ByteString
          getDomainBytes() {
        java.lang.Object ref = domain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          domain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Top private domain.
       * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
       * &#64;see [InternetDomainNameExplained](https://github.com/google/guava/wiki/InternetDomainNameExplained)
       * NOT NULL. 
       * </pre>
       *
       * <code>string domain = 2;</code>
       * @param value The domain to set.
       * @return This builder for chaining.
       */
      public Builder setDomain(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        domain_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Top private domain.
       * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
       * &#64;see [InternetDomainNameExplained](https://github.com/google/guava/wiki/InternetDomainNameExplained)
       * NOT NULL. 
       * </pre>
       *
       * <code>string domain = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDomain() {
        
        domain_ = getDefaultInstance().getDomain();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Top private domain.
       * Should be of [RFC4703](https://tools.ietf.org/html/rfc4703) format.
       * &#64;see [InternetDomainNameExplained](https://github.com/google/guava/wiki/InternetDomainNameExplained)
       * NOT NULL. 
       * </pre>
       *
       * <code>string domain = 2;</code>
       * @param value The bytes for domain to set.
       * @return This builder for chaining.
       */
      public Builder setDomainBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        domain_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString clientIp_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Client IP addresses.
       * IP addresses are represented by concatenated big endian bytes.
       * The length of this field should be multiple of 4.
       * NULLABLE. 
       * </pre>
       *
       * <code>bytes client_ip = 3;</code>
       * @return The clientIp.
       */
      public com.google.protobuf.ByteString getClientIp() {
        return clientIp_;
      }
      /**
       * <pre>
       * Client IP addresses.
       * IP addresses are represented by concatenated big endian bytes.
       * The length of this field should be multiple of 4.
       * NULLABLE. 
       * </pre>
       *
       * <code>bytes client_ip = 3;</code>
       * @param value The clientIp to set.
       * @return This builder for chaining.
       */
      public Builder setClientIp(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        clientIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Client IP addresses.
       * IP addresses are represented by concatenated big endian bytes.
       * The length of this field should be multiple of 4.
       * NULLABLE. 
       * </pre>
       *
       * <code>bytes client_ip = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearClientIp() {
        
        clientIp_ = getDefaultInstance().getClientIp();
        onChanged();
        return this;
      }

      private long qTime_ ;
      /**
       * <pre>
       * Timestamp of DNS query
       * NOT NULL. 
       * </pre>
       *
       * <code>int64 q_time = 4;</code>
       * @return The qTime.
       */
      public long getQTime() {
        return qTime_;
      }
      /**
       * <pre>
       * Timestamp of DNS query
       * NOT NULL. 
       * </pre>
       *
       * <code>int64 q_time = 4;</code>
       * @param value The qTime to set.
       * @return This builder for chaining.
       */
      public Builder setQTime(long value) {
        
        qTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp of DNS query
       * NOT NULL. 
       * </pre>
       *
       * <code>int64 q_time = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearQTime() {
        
        qTime_ = 0L;
        onChanged();
        return this;
      }

      private int qType_ ;
      /**
       * <pre>
       * Type of DNS query
       * &#64;see [DNS Parameters](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml)
       * NOT NULL. 
       * </pre>
       *
       * <code>int32 q_type = 5;</code>
       * @return The qType.
       */
      public int getQType() {
        return qType_;
      }
      /**
       * <pre>
       * Type of DNS query
       * &#64;see [DNS Parameters](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml)
       * NOT NULL. 
       * </pre>
       *
       * <code>int32 q_type = 5;</code>
       * @param value The qType to set.
       * @return This builder for chaining.
       */
      public Builder setQType(int value) {
        
        qType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of DNS query
       * &#64;see [DNS Parameters](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml)
       * NOT NULL. 
       * </pre>
       *
       * <code>int32 q_type = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearQType() {
        
        qType_ = 0;
        onChanged();
        return this;
      }

      private int rCode_ ;
      /**
       * <pre>
       * Response code in DNS response
       * &#64;see [DNS Parameters](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml)
       * NOT NULL. 
       * </pre>
       *
       * <code>int32 r_code = 6;</code>
       * @return The rCode.
       */
      public int getRCode() {
        return rCode_;
      }
      /**
       * <pre>
       * Response code in DNS response
       * &#64;see [DNS Parameters](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml)
       * NOT NULL. 
       * </pre>
       *
       * <code>int32 r_code = 6;</code>
       * @param value The rCode to set.
       * @return This builder for chaining.
       */
      public Builder setRCode(int value) {
        
        rCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Response code in DNS response
       * &#64;see [DNS Parameters](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml)
       * NOT NULL. 
       * </pre>
       *
       * <code>int32 r_code = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRCode() {
        
        rCode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString rIpv4Addrs_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * IPv4 addresses (A record) in DNS response.
       * IP addresses are represented by concatenated big endian bytes.
       * The length of this field should be multiple of 4.
       * NULLABLE. 
       * </pre>
       *
       * <code>bytes r_ipv4_addrs = 7;</code>
       * @return The rIpv4Addrs.
       */
      public com.google.protobuf.ByteString getRIpv4Addrs() {
        return rIpv4Addrs_;
      }
      /**
       * <pre>
       * IPv4 addresses (A record) in DNS response.
       * IP addresses are represented by concatenated big endian bytes.
       * The length of this field should be multiple of 4.
       * NULLABLE. 
       * </pre>
       *
       * <code>bytes r_ipv4_addrs = 7;</code>
       * @param value The rIpv4Addrs to set.
       * @return This builder for chaining.
       */
      public Builder setRIpv4Addrs(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rIpv4Addrs_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IPv4 addresses (A record) in DNS response.
       * IP addresses are represented by concatenated big endian bytes.
       * The length of this field should be multiple of 4.
       * NULLABLE. 
       * </pre>
       *
       * <code>bytes r_ipv4_addrs = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRIpv4Addrs() {
        
        rIpv4Addrs_ = getDefaultInstance().getRIpv4Addrs();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString rIpv6Addrs_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * IPv6 addresses (AAAA record) in DNS response.
       * IP addresses are represented by concatenated big endian bytes.
       * The length of this field should be multiple of 16.
       * NULLABLE. 
       * </pre>
       *
       * <code>bytes r_ipv6_addrs = 8;</code>
       * @return The rIpv6Addrs.
       */
      public com.google.protobuf.ByteString getRIpv6Addrs() {
        return rIpv6Addrs_;
      }
      /**
       * <pre>
       * IPv6 addresses (AAAA record) in DNS response.
       * IP addresses are represented by concatenated big endian bytes.
       * The length of this field should be multiple of 16.
       * NULLABLE. 
       * </pre>
       *
       * <code>bytes r_ipv6_addrs = 8;</code>
       * @param value The rIpv6Addrs to set.
       * @return This builder for chaining.
       */
      public Builder setRIpv6Addrs(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rIpv6Addrs_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IPv6 addresses (AAAA record) in DNS response.
       * IP addresses are represented by concatenated big endian bytes.
       * The length of this field should be multiple of 16.
       * NULLABLE. 
       * </pre>
       *
       * <code>bytes r_ipv6_addrs = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRIpv6Addrs() {
        
        rIpv6Addrs_ = getDefaultInstance().getRIpv6Addrs();
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList rCnames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRCnamesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rCnames_ = new com.google.protobuf.LazyStringArrayList(rCnames_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * CNAMEs in DNS response.
       * NULLABLE. 
       * </pre>
       *
       * <code>repeated string r_cnames = 9;</code>
       * @return A list containing the rCnames.
       */
      public com.google.protobuf.ProtocolStringList
          getRCnamesList() {
        return rCnames_.getUnmodifiableView();
      }
      /**
       * <pre>
       * CNAMEs in DNS response.
       * NULLABLE. 
       * </pre>
       *
       * <code>repeated string r_cnames = 9;</code>
       * @return The count of rCnames.
       */
      public int getRCnamesCount() {
        return rCnames_.size();
      }
      /**
       * <pre>
       * CNAMEs in DNS response.
       * NULLABLE. 
       * </pre>
       *
       * <code>repeated string r_cnames = 9;</code>
       * @param index The index of the element to return.
       * @return The rCnames at the given index.
       */
      public java.lang.String getRCnames(int index) {
        return rCnames_.get(index);
      }
      /**
       * <pre>
       * CNAMEs in DNS response.
       * NULLABLE. 
       * </pre>
       *
       * <code>repeated string r_cnames = 9;</code>
       * @param index The index of the value to return.
       * @return The bytes of the rCnames at the given index.
       */
      public com.google.protobuf.ByteString
          getRCnamesBytes(int index) {
        return rCnames_.getByteString(index);
      }
      /**
       * <pre>
       * CNAMEs in DNS response.
       * NULLABLE. 
       * </pre>
       *
       * <code>repeated string r_cnames = 9;</code>
       * @param index The index to set the value at.
       * @param value The rCnames to set.
       * @return This builder for chaining.
       */
      public Builder setRCnames(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRCnamesIsMutable();
        rCnames_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * CNAMEs in DNS response.
       * NULLABLE. 
       * </pre>
       *
       * <code>repeated string r_cnames = 9;</code>
       * @param value The rCnames to add.
       * @return This builder for chaining.
       */
      public Builder addRCnames(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRCnamesIsMutable();
        rCnames_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * CNAMEs in DNS response.
       * NULLABLE. 
       * </pre>
       *
       * <code>repeated string r_cnames = 9;</code>
       * @param values The rCnames to add.
       * @return This builder for chaining.
       */
      public Builder addAllRCnames(
          java.lang.Iterable<java.lang.String> values) {
        ensureRCnamesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rCnames_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * CNAMEs in DNS response.
       * NULLABLE. 
       * </pre>
       *
       * <code>repeated string r_cnames = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRCnames() {
        rCnames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * CNAMEs in DNS response.
       * NULLABLE. 
       * </pre>
       *
       * <code>repeated string r_cnames = 9;</code>
       * @param value The bytes of the rCnames to add.
       * @return This builder for chaining.
       */
      public Builder addRCnamesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureRCnamesIsMutable();
        rCnames_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.PDnsData)
    }

    // @@protoc_insertion_point(class_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.PDnsData)
    private static final com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData();
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PDnsData>
        PARSER = new com.google.protobuf.AbstractParser<PDnsData>() {
      @java.lang.Override
      public PDnsData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PDnsData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PDnsData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PDnsData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.PDnsDataProto.PDnsData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_PDnsData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_PDnsData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=com/hitnslab/dnssecurity/deeparcher/ap" +
      "i/proto/pdns_data.proto\022-com.hitnslab.dn" +
      "ssecurity.deeparcher.api.proto\"\251\001\n\010PDnsD" +
      "ata\022\014\n\004fqdn\030\001 \001(\t\022\016\n\006domain\030\002 \001(\t\022\021\n\tcli" +
      "ent_ip\030\003 \001(\014\022\016\n\006q_time\030\004 \001(\003\022\016\n\006q_type\030\005" +
      " \001(\005\022\016\n\006r_code\030\006 \001(\005\022\024\n\014r_ipv4_addrs\030\007 \001" +
      "(\014\022\024\n\014r_ipv6_addrs\030\010 \001(\014\022\020\n\010r_cnames\030\t \003" +
      "(\tBR\n<com.hitnslab.dnssecurity.deeparche" +
      "r.api.proto.generated.javaB\rPDnsDataProt" +
      "oH\001\370\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_PDnsData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_PDnsData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_PDnsData_descriptor,
        new java.lang.String[] { "Fqdn", "Domain", "ClientIp", "QTime", "QType", "RCode", "RIpv4Addrs", "RIpv6Addrs", "RCnames", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
