// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/hitnslab/dnssecurity/deeparcher/api/proto/matrix.proto

package com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java;

public final class MatrixProto {
  private MatrixProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DenseMatFloatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatFloat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    java.util.List<java.lang.Integer> getDimsList();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    int getDimsCount();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    int getDims(int index);

    /**
     * <code>repeated float values = 10;</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.Float> getValuesList();
    /**
     * <code>repeated float values = 10;</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <code>repeated float values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    float getValues(int index);
  }
  /**
   * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatFloat}
   */
  public static final class DenseMatFloat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatFloat)
      DenseMatFloatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DenseMatFloat.newBuilder() to construct.
    private DenseMatFloat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DenseMatFloat() {
      dims_ = emptyIntList();
      values_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DenseMatFloat();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DenseMatFloat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dims_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dims_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 85: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                values_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              values_.addFloat(input.readFloat());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                values_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          values_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatFloat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatFloat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat.Builder.class);
    }

    public static final int DIMS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList dims_;
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDimsList() {
      return dims_;
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    public int getDimsCount() {
      return dims_.size();
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    public int getDims(int index) {
      return dims_.getInt(index);
    }
    private int dimsMemoizedSerializedSize = -1;

    public static final int VALUES_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.FloatList values_;
    /**
     * <code>repeated float values = 10;</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated float values = 10;</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated float values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public float getValues(int index) {
      return values_.getFloat(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimsMemoizedSerializedSize);
      }
      for (int i = 0; i < dims_.size(); i++) {
        output.writeUInt32NoTag(dims_.getInt(i));
      }
      if (getValuesList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeFloatNoTag(values_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dims_.getInt(i));
        }
        size += dataSize;
        if (!getDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValuesList().size();
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat)) {
        return super.equals(obj);
      }
      com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat other = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat) obj;

      if (!getDimsList()
          .equals(other.getDimsList())) return false;
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimsCount() > 0) {
        hash = (37 * hash) + DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getDimsList().hashCode();
      }
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatFloat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatFloat)
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatFloat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatFloat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat.Builder.class);
      }

      // Construct using com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        values_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatFloat_descriptor;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat getDefaultInstanceForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat.getDefaultInstance();
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat build() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat buildPartial() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat result = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dims_ = dims_;
        if (((bitField0_ & 0x00000002) != 0)) {
          values_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat) {
          return mergeFrom((com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat other) {
        if (other == com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat.getDefaultInstance()) return this;
        if (!other.dims_.isEmpty()) {
          if (dims_.isEmpty()) {
            dims_ = other.dims_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimsIsMutable();
            dims_.addAll(other.dims_);
          }
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList dims_ = emptyIntList();
      private void ensureDimsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dims_ = mutableCopy(dims_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return A list containing the dims.
       */
      public java.util.List<java.lang.Integer>
          getDimsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dims_) : dims_;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return The count of dims.
       */
      public int getDimsCount() {
        return dims_.size();
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index of the element to return.
       * @return The dims at the given index.
       */
      public int getDims(int index) {
        return dims_.getInt(index);
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index to set the value at.
       * @param value The dims to set.
       * @return This builder for chaining.
       */
      public Builder setDims(
          int index, int value) {
        ensureDimsIsMutable();
        dims_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param value The dims to add.
       * @return This builder for chaining.
       */
      public Builder addDims(int value) {
        ensureDimsIsMutable();
        dims_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param values The dims to add.
       * @return This builder for chaining.
       */
      public Builder addAllDims(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dims_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDims() {
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList values_ = emptyFloatList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          values_ = mutableCopy(values_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return A list containing the values.
       */
      public java.util.List<java.lang.Float>
          getValuesList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(values_) : values_;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public float getValues(int index) {
        return values_.getFloat(index);
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, float value) {
        ensureValuesIsMutable();
        values_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(float value) {
        ensureValuesIsMutable();
        values_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        values_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatFloat)
    }

    // @@protoc_insertion_point(class_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatFloat)
    private static final com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat();
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DenseMatFloat>
        PARSER = new com.google.protobuf.AbstractParser<DenseMatFloat>() {
      @java.lang.Override
      public DenseMatFloat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DenseMatFloat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DenseMatFloat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DenseMatFloat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatFloat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CooMatFloatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatFloat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    java.util.List<java.lang.Integer> getDimsList();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    int getDimsCount();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    int getDims(int index);

    /**
     * <code>repeated uint32 rows = 2;</code>
     * @return A list containing the rows.
     */
    java.util.List<java.lang.Integer> getRowsList();
    /**
     * <code>repeated uint32 rows = 2;</code>
     * @return The count of rows.
     */
    int getRowsCount();
    /**
     * <code>repeated uint32 rows = 2;</code>
     * @param index The index of the element to return.
     * @return The rows at the given index.
     */
    int getRows(int index);

    /**
     * <code>repeated uint32 cols = 3;</code>
     * @return A list containing the cols.
     */
    java.util.List<java.lang.Integer> getColsList();
    /**
     * <code>repeated uint32 cols = 3;</code>
     * @return The count of cols.
     */
    int getColsCount();
    /**
     * <code>repeated uint32 cols = 3;</code>
     * @param index The index of the element to return.
     * @return The cols at the given index.
     */
    int getCols(int index);

    /**
     * <code>repeated float values = 10;</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.Float> getValuesList();
    /**
     * <code>repeated float values = 10;</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <code>repeated float values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    float getValues(int index);
  }
  /**
   * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatFloat}
   */
  public static final class CooMatFloat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatFloat)
      CooMatFloatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CooMatFloat.newBuilder() to construct.
    private CooMatFloat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CooMatFloat() {
      dims_ = emptyIntList();
      rows_ = emptyIntList();
      cols_ = emptyIntList();
      values_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CooMatFloat();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CooMatFloat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dims_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dims_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                rows_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              rows_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                rows_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                rows_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                cols_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              cols_.addInt(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                cols_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cols_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 85: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                values_ = newFloatList();
                mutable_bitField0_ |= 0x00000008;
              }
              values_.addFloat(input.readFloat());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                values_ = newFloatList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          rows_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          cols_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatFloat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatFloat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat.Builder.class);
    }

    public static final int DIMS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList dims_;
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDimsList() {
      return dims_;
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    public int getDimsCount() {
      return dims_.size();
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    public int getDims(int index) {
      return dims_.getInt(index);
    }
    private int dimsMemoizedSerializedSize = -1;

    public static final int ROWS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList rows_;
    /**
     * <code>repeated uint32 rows = 2;</code>
     * @return A list containing the rows.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated uint32 rows = 2;</code>
     * @return The count of rows.
     */
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated uint32 rows = 2;</code>
     * @param index The index of the element to return.
     * @return The rows at the given index.
     */
    public int getRows(int index) {
      return rows_.getInt(index);
    }
    private int rowsMemoizedSerializedSize = -1;

    public static final int COLS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList cols_;
    /**
     * <code>repeated uint32 cols = 3;</code>
     * @return A list containing the cols.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getColsList() {
      return cols_;
    }
    /**
     * <code>repeated uint32 cols = 3;</code>
     * @return The count of cols.
     */
    public int getColsCount() {
      return cols_.size();
    }
    /**
     * <code>repeated uint32 cols = 3;</code>
     * @param index The index of the element to return.
     * @return The cols at the given index.
     */
    public int getCols(int index) {
      return cols_.getInt(index);
    }
    private int colsMemoizedSerializedSize = -1;

    public static final int VALUES_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.FloatList values_;
    /**
     * <code>repeated float values = 10;</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated float values = 10;</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated float values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public float getValues(int index) {
      return values_.getFloat(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimsMemoizedSerializedSize);
      }
      for (int i = 0; i < dims_.size(); i++) {
        output.writeUInt32NoTag(dims_.getInt(i));
      }
      if (getRowsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(rowsMemoizedSerializedSize);
      }
      for (int i = 0; i < rows_.size(); i++) {
        output.writeUInt32NoTag(rows_.getInt(i));
      }
      if (getColsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(colsMemoizedSerializedSize);
      }
      for (int i = 0; i < cols_.size(); i++) {
        output.writeUInt32NoTag(cols_.getInt(i));
      }
      if (getValuesList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeFloatNoTag(values_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dims_.getInt(i));
        }
        size += dataSize;
        if (!getDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rows_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(rows_.getInt(i));
        }
        size += dataSize;
        if (!getRowsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rowsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cols_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(cols_.getInt(i));
        }
        size += dataSize;
        if (!getColsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        colsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValuesList().size();
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat)) {
        return super.equals(obj);
      }
      com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat other = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat) obj;

      if (!getDimsList()
          .equals(other.getDimsList())) return false;
      if (!getRowsList()
          .equals(other.getRowsList())) return false;
      if (!getColsList()
          .equals(other.getColsList())) return false;
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimsCount() > 0) {
        hash = (37 * hash) + DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getDimsList().hashCode();
      }
      if (getRowsCount() > 0) {
        hash = (37 * hash) + ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getRowsList().hashCode();
      }
      if (getColsCount() > 0) {
        hash = (37 * hash) + COLS_FIELD_NUMBER;
        hash = (53 * hash) + getColsList().hashCode();
      }
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatFloat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatFloat)
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatFloat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatFloat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat.Builder.class);
      }

      // Construct using com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        rows_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cols_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        values_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatFloat_descriptor;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat getDefaultInstanceForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat.getDefaultInstance();
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat build() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat buildPartial() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat result = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dims_ = dims_;
        if (((bitField0_ & 0x00000002) != 0)) {
          rows_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.rows_ = rows_;
        if (((bitField0_ & 0x00000004) != 0)) {
          cols_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cols_ = cols_;
        if (((bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat) {
          return mergeFrom((com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat other) {
        if (other == com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat.getDefaultInstance()) return this;
        if (!other.dims_.isEmpty()) {
          if (dims_.isEmpty()) {
            dims_ = other.dims_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimsIsMutable();
            dims_.addAll(other.dims_);
          }
          onChanged();
        }
        if (!other.rows_.isEmpty()) {
          if (rows_.isEmpty()) {
            rows_ = other.rows_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRowsIsMutable();
            rows_.addAll(other.rows_);
          }
          onChanged();
        }
        if (!other.cols_.isEmpty()) {
          if (cols_.isEmpty()) {
            cols_ = other.cols_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureColsIsMutable();
            cols_.addAll(other.cols_);
          }
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList dims_ = emptyIntList();
      private void ensureDimsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dims_ = mutableCopy(dims_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return A list containing the dims.
       */
      public java.util.List<java.lang.Integer>
          getDimsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dims_) : dims_;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return The count of dims.
       */
      public int getDimsCount() {
        return dims_.size();
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index of the element to return.
       * @return The dims at the given index.
       */
      public int getDims(int index) {
        return dims_.getInt(index);
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index to set the value at.
       * @param value The dims to set.
       * @return This builder for chaining.
       */
      public Builder setDims(
          int index, int value) {
        ensureDimsIsMutable();
        dims_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param value The dims to add.
       * @return This builder for chaining.
       */
      public Builder addDims(int value) {
        ensureDimsIsMutable();
        dims_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param values The dims to add.
       * @return This builder for chaining.
       */
      public Builder addAllDims(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dims_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDims() {
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList rows_ = emptyIntList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          rows_ = mutableCopy(rows_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @return A list containing the rows.
       */
      public java.util.List<java.lang.Integer>
          getRowsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(rows_) : rows_;
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @return The count of rows.
       */
      public int getRowsCount() {
        return rows_.size();
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @param index The index of the element to return.
       * @return The rows at the given index.
       */
      public int getRows(int index) {
        return rows_.getInt(index);
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @param index The index to set the value at.
       * @param value The rows to set.
       * @return This builder for chaining.
       */
      public Builder setRows(
          int index, int value) {
        ensureRowsIsMutable();
        rows_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @param value The rows to add.
       * @return This builder for chaining.
       */
      public Builder addRows(int value) {
        ensureRowsIsMutable();
        rows_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @param values The rows to add.
       * @return This builder for chaining.
       */
      public Builder addAllRows(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRowsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rows_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRows() {
        rows_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList cols_ = emptyIntList();
      private void ensureColsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          cols_ = mutableCopy(cols_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @return A list containing the cols.
       */
      public java.util.List<java.lang.Integer>
          getColsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(cols_) : cols_;
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @return The count of cols.
       */
      public int getColsCount() {
        return cols_.size();
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @param index The index of the element to return.
       * @return The cols at the given index.
       */
      public int getCols(int index) {
        return cols_.getInt(index);
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @param index The index to set the value at.
       * @param value The cols to set.
       * @return This builder for chaining.
       */
      public Builder setCols(
          int index, int value) {
        ensureColsIsMutable();
        cols_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @param value The cols to add.
       * @return This builder for chaining.
       */
      public Builder addCols(int value) {
        ensureColsIsMutable();
        cols_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @param values The cols to add.
       * @return This builder for chaining.
       */
      public Builder addAllCols(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureColsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cols_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCols() {
        cols_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList values_ = emptyFloatList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          values_ = mutableCopy(values_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return A list containing the values.
       */
      public java.util.List<java.lang.Float>
          getValuesList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(values_) : values_;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public float getValues(int index) {
        return values_.getFloat(index);
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, float value) {
        ensureValuesIsMutable();
        values_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(float value) {
        ensureValuesIsMutable();
        values_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        values_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatFloat)
    }

    // @@protoc_insertion_point(class_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatFloat)
    private static final com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat();
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CooMatFloat>
        PARSER = new com.google.protobuf.AbstractParser<CooMatFloat>() {
      @java.lang.Override
      public CooMatFloat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CooMatFloat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CooMatFloat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CooMatFloat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatFloat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CsrMatFloatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatFloat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    java.util.List<java.lang.Integer> getDimsList();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    int getDimsCount();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    int getDims(int index);

    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @return A list containing the rowOffsets.
     */
    java.util.List<java.lang.Integer> getRowOffsetsList();
    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @return The count of rowOffsets.
     */
    int getRowOffsetsCount();
    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @param index The index of the element to return.
     * @return The rowOffsets at the given index.
     */
    int getRowOffsets(int index);

    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @return A list containing the colIndices.
     */
    java.util.List<java.lang.Integer> getColIndicesList();
    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @return The count of colIndices.
     */
    int getColIndicesCount();
    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @param index The index of the element to return.
     * @return The colIndices at the given index.
     */
    int getColIndices(int index);

    /**
     * <code>repeated float values = 10;</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.Float> getValuesList();
    /**
     * <code>repeated float values = 10;</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <code>repeated float values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    float getValues(int index);
  }
  /**
   * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatFloat}
   */
  public static final class CsrMatFloat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatFloat)
      CsrMatFloatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CsrMatFloat.newBuilder() to construct.
    private CsrMatFloat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CsrMatFloat() {
      dims_ = emptyIntList();
      rowOffsets_ = emptyIntList();
      colIndices_ = emptyIntList();
      values_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CsrMatFloat();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CsrMatFloat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dims_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dims_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                rowOffsets_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              rowOffsets_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                rowOffsets_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                rowOffsets_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                colIndices_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              colIndices_.addInt(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                colIndices_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                colIndices_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 85: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                values_ = newFloatList();
                mutable_bitField0_ |= 0x00000008;
              }
              values_.addFloat(input.readFloat());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                values_ = newFloatList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          rowOffsets_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          colIndices_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatFloat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatFloat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat.Builder.class);
    }

    public static final int DIMS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList dims_;
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDimsList() {
      return dims_;
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    public int getDimsCount() {
      return dims_.size();
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    public int getDims(int index) {
      return dims_.getInt(index);
    }
    private int dimsMemoizedSerializedSize = -1;

    public static final int ROW_OFFSETS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList rowOffsets_;
    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @return A list containing the rowOffsets.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRowOffsetsList() {
      return rowOffsets_;
    }
    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @return The count of rowOffsets.
     */
    public int getRowOffsetsCount() {
      return rowOffsets_.size();
    }
    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @param index The index of the element to return.
     * @return The rowOffsets at the given index.
     */
    public int getRowOffsets(int index) {
      return rowOffsets_.getInt(index);
    }
    private int rowOffsetsMemoizedSerializedSize = -1;

    public static final int COL_INDICES_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList colIndices_;
    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @return A list containing the colIndices.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getColIndicesList() {
      return colIndices_;
    }
    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @return The count of colIndices.
     */
    public int getColIndicesCount() {
      return colIndices_.size();
    }
    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @param index The index of the element to return.
     * @return The colIndices at the given index.
     */
    public int getColIndices(int index) {
      return colIndices_.getInt(index);
    }
    private int colIndicesMemoizedSerializedSize = -1;

    public static final int VALUES_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.FloatList values_;
    /**
     * <code>repeated float values = 10;</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated float values = 10;</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated float values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public float getValues(int index) {
      return values_.getFloat(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimsMemoizedSerializedSize);
      }
      for (int i = 0; i < dims_.size(); i++) {
        output.writeUInt32NoTag(dims_.getInt(i));
      }
      if (getRowOffsetsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(rowOffsetsMemoizedSerializedSize);
      }
      for (int i = 0; i < rowOffsets_.size(); i++) {
        output.writeUInt32NoTag(rowOffsets_.getInt(i));
      }
      if (getColIndicesList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(colIndicesMemoizedSerializedSize);
      }
      for (int i = 0; i < colIndices_.size(); i++) {
        output.writeUInt32NoTag(colIndices_.getInt(i));
      }
      if (getValuesList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeFloatNoTag(values_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dims_.getInt(i));
        }
        size += dataSize;
        if (!getDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rowOffsets_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(rowOffsets_.getInt(i));
        }
        size += dataSize;
        if (!getRowOffsetsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rowOffsetsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < colIndices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(colIndices_.getInt(i));
        }
        size += dataSize;
        if (!getColIndicesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        colIndicesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValuesList().size();
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat)) {
        return super.equals(obj);
      }
      com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat other = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat) obj;

      if (!getDimsList()
          .equals(other.getDimsList())) return false;
      if (!getRowOffsetsList()
          .equals(other.getRowOffsetsList())) return false;
      if (!getColIndicesList()
          .equals(other.getColIndicesList())) return false;
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimsCount() > 0) {
        hash = (37 * hash) + DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getDimsList().hashCode();
      }
      if (getRowOffsetsCount() > 0) {
        hash = (37 * hash) + ROW_OFFSETS_FIELD_NUMBER;
        hash = (53 * hash) + getRowOffsetsList().hashCode();
      }
      if (getColIndicesCount() > 0) {
        hash = (37 * hash) + COL_INDICES_FIELD_NUMBER;
        hash = (53 * hash) + getColIndicesList().hashCode();
      }
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatFloat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatFloat)
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatFloat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatFloat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat.Builder.class);
      }

      // Construct using com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        rowOffsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        colIndices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        values_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatFloat_descriptor;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat getDefaultInstanceForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat.getDefaultInstance();
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat build() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat buildPartial() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat result = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dims_ = dims_;
        if (((bitField0_ & 0x00000002) != 0)) {
          rowOffsets_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.rowOffsets_ = rowOffsets_;
        if (((bitField0_ & 0x00000004) != 0)) {
          colIndices_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.colIndices_ = colIndices_;
        if (((bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat) {
          return mergeFrom((com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat other) {
        if (other == com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat.getDefaultInstance()) return this;
        if (!other.dims_.isEmpty()) {
          if (dims_.isEmpty()) {
            dims_ = other.dims_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimsIsMutable();
            dims_.addAll(other.dims_);
          }
          onChanged();
        }
        if (!other.rowOffsets_.isEmpty()) {
          if (rowOffsets_.isEmpty()) {
            rowOffsets_ = other.rowOffsets_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRowOffsetsIsMutable();
            rowOffsets_.addAll(other.rowOffsets_);
          }
          onChanged();
        }
        if (!other.colIndices_.isEmpty()) {
          if (colIndices_.isEmpty()) {
            colIndices_ = other.colIndices_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureColIndicesIsMutable();
            colIndices_.addAll(other.colIndices_);
          }
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList dims_ = emptyIntList();
      private void ensureDimsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dims_ = mutableCopy(dims_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return A list containing the dims.
       */
      public java.util.List<java.lang.Integer>
          getDimsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dims_) : dims_;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return The count of dims.
       */
      public int getDimsCount() {
        return dims_.size();
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index of the element to return.
       * @return The dims at the given index.
       */
      public int getDims(int index) {
        return dims_.getInt(index);
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index to set the value at.
       * @param value The dims to set.
       * @return This builder for chaining.
       */
      public Builder setDims(
          int index, int value) {
        ensureDimsIsMutable();
        dims_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param value The dims to add.
       * @return This builder for chaining.
       */
      public Builder addDims(int value) {
        ensureDimsIsMutable();
        dims_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param values The dims to add.
       * @return This builder for chaining.
       */
      public Builder addAllDims(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dims_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDims() {
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList rowOffsets_ = emptyIntList();
      private void ensureRowOffsetsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          rowOffsets_ = mutableCopy(rowOffsets_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @return A list containing the rowOffsets.
       */
      public java.util.List<java.lang.Integer>
          getRowOffsetsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(rowOffsets_) : rowOffsets_;
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @return The count of rowOffsets.
       */
      public int getRowOffsetsCount() {
        return rowOffsets_.size();
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @param index The index of the element to return.
       * @return The rowOffsets at the given index.
       */
      public int getRowOffsets(int index) {
        return rowOffsets_.getInt(index);
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @param index The index to set the value at.
       * @param value The rowOffsets to set.
       * @return This builder for chaining.
       */
      public Builder setRowOffsets(
          int index, int value) {
        ensureRowOffsetsIsMutable();
        rowOffsets_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @param value The rowOffsets to add.
       * @return This builder for chaining.
       */
      public Builder addRowOffsets(int value) {
        ensureRowOffsetsIsMutable();
        rowOffsets_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @param values The rowOffsets to add.
       * @return This builder for chaining.
       */
      public Builder addAllRowOffsets(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRowOffsetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rowOffsets_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRowOffsets() {
        rowOffsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList colIndices_ = emptyIntList();
      private void ensureColIndicesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          colIndices_ = mutableCopy(colIndices_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @return A list containing the colIndices.
       */
      public java.util.List<java.lang.Integer>
          getColIndicesList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(colIndices_) : colIndices_;
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @return The count of colIndices.
       */
      public int getColIndicesCount() {
        return colIndices_.size();
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @param index The index of the element to return.
       * @return The colIndices at the given index.
       */
      public int getColIndices(int index) {
        return colIndices_.getInt(index);
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @param index The index to set the value at.
       * @param value The colIndices to set.
       * @return This builder for chaining.
       */
      public Builder setColIndices(
          int index, int value) {
        ensureColIndicesIsMutable();
        colIndices_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @param value The colIndices to add.
       * @return This builder for chaining.
       */
      public Builder addColIndices(int value) {
        ensureColIndicesIsMutable();
        colIndices_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @param values The colIndices to add.
       * @return This builder for chaining.
       */
      public Builder addAllColIndices(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureColIndicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, colIndices_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearColIndices() {
        colIndices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList values_ = emptyFloatList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          values_ = mutableCopy(values_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return A list containing the values.
       */
      public java.util.List<java.lang.Float>
          getValuesList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(values_) : values_;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public float getValues(int index) {
        return values_.getFloat(index);
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, float value) {
        ensureValuesIsMutable();
        values_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(float value) {
        ensureValuesIsMutable();
        values_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        values_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatFloat)
    }

    // @@protoc_insertion_point(class_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatFloat)
    private static final com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat();
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CsrMatFloat>
        PARSER = new com.google.protobuf.AbstractParser<CsrMatFloat>() {
      @java.lang.Override
      public CsrMatFloat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CsrMatFloat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CsrMatFloat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CsrMatFloat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatFloat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CscMatFloatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatFloat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    java.util.List<java.lang.Integer> getDimsList();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    int getDimsCount();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    int getDims(int index);

    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @return A list containing the colOffsets.
     */
    java.util.List<java.lang.Integer> getColOffsetsList();
    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @return The count of colOffsets.
     */
    int getColOffsetsCount();
    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @param index The index of the element to return.
     * @return The colOffsets at the given index.
     */
    int getColOffsets(int index);

    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @return A list containing the rowIndices.
     */
    java.util.List<java.lang.Integer> getRowIndicesList();
    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @return The count of rowIndices.
     */
    int getRowIndicesCount();
    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @param index The index of the element to return.
     * @return The rowIndices at the given index.
     */
    int getRowIndices(int index);

    /**
     * <code>repeated float values = 10;</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.Float> getValuesList();
    /**
     * <code>repeated float values = 10;</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <code>repeated float values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    float getValues(int index);
  }
  /**
   * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatFloat}
   */
  public static final class CscMatFloat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatFloat)
      CscMatFloatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CscMatFloat.newBuilder() to construct.
    private CscMatFloat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CscMatFloat() {
      dims_ = emptyIntList();
      colOffsets_ = emptyIntList();
      rowIndices_ = emptyIntList();
      values_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CscMatFloat();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CscMatFloat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dims_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dims_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                colOffsets_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              colOffsets_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                colOffsets_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                colOffsets_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                rowIndices_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              rowIndices_.addInt(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                rowIndices_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                rowIndices_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 85: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                values_ = newFloatList();
                mutable_bitField0_ |= 0x00000008;
              }
              values_.addFloat(input.readFloat());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                values_ = newFloatList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          colOffsets_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          rowIndices_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatFloat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatFloat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat.Builder.class);
    }

    public static final int DIMS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList dims_;
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDimsList() {
      return dims_;
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    public int getDimsCount() {
      return dims_.size();
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    public int getDims(int index) {
      return dims_.getInt(index);
    }
    private int dimsMemoizedSerializedSize = -1;

    public static final int COL_OFFSETS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList colOffsets_;
    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @return A list containing the colOffsets.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getColOffsetsList() {
      return colOffsets_;
    }
    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @return The count of colOffsets.
     */
    public int getColOffsetsCount() {
      return colOffsets_.size();
    }
    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @param index The index of the element to return.
     * @return The colOffsets at the given index.
     */
    public int getColOffsets(int index) {
      return colOffsets_.getInt(index);
    }
    private int colOffsetsMemoizedSerializedSize = -1;

    public static final int ROW_INDICES_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList rowIndices_;
    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @return A list containing the rowIndices.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRowIndicesList() {
      return rowIndices_;
    }
    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @return The count of rowIndices.
     */
    public int getRowIndicesCount() {
      return rowIndices_.size();
    }
    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @param index The index of the element to return.
     * @return The rowIndices at the given index.
     */
    public int getRowIndices(int index) {
      return rowIndices_.getInt(index);
    }
    private int rowIndicesMemoizedSerializedSize = -1;

    public static final int VALUES_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.FloatList values_;
    /**
     * <code>repeated float values = 10;</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated float values = 10;</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated float values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public float getValues(int index) {
      return values_.getFloat(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimsMemoizedSerializedSize);
      }
      for (int i = 0; i < dims_.size(); i++) {
        output.writeUInt32NoTag(dims_.getInt(i));
      }
      if (getColOffsetsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(colOffsetsMemoizedSerializedSize);
      }
      for (int i = 0; i < colOffsets_.size(); i++) {
        output.writeUInt32NoTag(colOffsets_.getInt(i));
      }
      if (getRowIndicesList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(rowIndicesMemoizedSerializedSize);
      }
      for (int i = 0; i < rowIndices_.size(); i++) {
        output.writeUInt32NoTag(rowIndices_.getInt(i));
      }
      if (getValuesList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeFloatNoTag(values_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dims_.getInt(i));
        }
        size += dataSize;
        if (!getDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < colOffsets_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(colOffsets_.getInt(i));
        }
        size += dataSize;
        if (!getColOffsetsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        colOffsetsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rowIndices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(rowIndices_.getInt(i));
        }
        size += dataSize;
        if (!getRowIndicesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rowIndicesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValuesList().size();
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat)) {
        return super.equals(obj);
      }
      com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat other = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat) obj;

      if (!getDimsList()
          .equals(other.getDimsList())) return false;
      if (!getColOffsetsList()
          .equals(other.getColOffsetsList())) return false;
      if (!getRowIndicesList()
          .equals(other.getRowIndicesList())) return false;
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimsCount() > 0) {
        hash = (37 * hash) + DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getDimsList().hashCode();
      }
      if (getColOffsetsCount() > 0) {
        hash = (37 * hash) + COL_OFFSETS_FIELD_NUMBER;
        hash = (53 * hash) + getColOffsetsList().hashCode();
      }
      if (getRowIndicesCount() > 0) {
        hash = (37 * hash) + ROW_INDICES_FIELD_NUMBER;
        hash = (53 * hash) + getRowIndicesList().hashCode();
      }
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatFloat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatFloat)
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatFloat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatFloat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat.Builder.class);
      }

      // Construct using com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        colOffsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        rowIndices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        values_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatFloat_descriptor;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat getDefaultInstanceForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat.getDefaultInstance();
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat build() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat buildPartial() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat result = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dims_ = dims_;
        if (((bitField0_ & 0x00000002) != 0)) {
          colOffsets_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.colOffsets_ = colOffsets_;
        if (((bitField0_ & 0x00000004) != 0)) {
          rowIndices_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.rowIndices_ = rowIndices_;
        if (((bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat) {
          return mergeFrom((com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat other) {
        if (other == com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat.getDefaultInstance()) return this;
        if (!other.dims_.isEmpty()) {
          if (dims_.isEmpty()) {
            dims_ = other.dims_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimsIsMutable();
            dims_.addAll(other.dims_);
          }
          onChanged();
        }
        if (!other.colOffsets_.isEmpty()) {
          if (colOffsets_.isEmpty()) {
            colOffsets_ = other.colOffsets_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureColOffsetsIsMutable();
            colOffsets_.addAll(other.colOffsets_);
          }
          onChanged();
        }
        if (!other.rowIndices_.isEmpty()) {
          if (rowIndices_.isEmpty()) {
            rowIndices_ = other.rowIndices_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRowIndicesIsMutable();
            rowIndices_.addAll(other.rowIndices_);
          }
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList dims_ = emptyIntList();
      private void ensureDimsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dims_ = mutableCopy(dims_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return A list containing the dims.
       */
      public java.util.List<java.lang.Integer>
          getDimsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dims_) : dims_;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return The count of dims.
       */
      public int getDimsCount() {
        return dims_.size();
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index of the element to return.
       * @return The dims at the given index.
       */
      public int getDims(int index) {
        return dims_.getInt(index);
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index to set the value at.
       * @param value The dims to set.
       * @return This builder for chaining.
       */
      public Builder setDims(
          int index, int value) {
        ensureDimsIsMutable();
        dims_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param value The dims to add.
       * @return This builder for chaining.
       */
      public Builder addDims(int value) {
        ensureDimsIsMutable();
        dims_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param values The dims to add.
       * @return This builder for chaining.
       */
      public Builder addAllDims(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dims_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDims() {
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList colOffsets_ = emptyIntList();
      private void ensureColOffsetsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          colOffsets_ = mutableCopy(colOffsets_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @return A list containing the colOffsets.
       */
      public java.util.List<java.lang.Integer>
          getColOffsetsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(colOffsets_) : colOffsets_;
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @return The count of colOffsets.
       */
      public int getColOffsetsCount() {
        return colOffsets_.size();
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @param index The index of the element to return.
       * @return The colOffsets at the given index.
       */
      public int getColOffsets(int index) {
        return colOffsets_.getInt(index);
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @param index The index to set the value at.
       * @param value The colOffsets to set.
       * @return This builder for chaining.
       */
      public Builder setColOffsets(
          int index, int value) {
        ensureColOffsetsIsMutable();
        colOffsets_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @param value The colOffsets to add.
       * @return This builder for chaining.
       */
      public Builder addColOffsets(int value) {
        ensureColOffsetsIsMutable();
        colOffsets_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @param values The colOffsets to add.
       * @return This builder for chaining.
       */
      public Builder addAllColOffsets(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureColOffsetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, colOffsets_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearColOffsets() {
        colOffsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList rowIndices_ = emptyIntList();
      private void ensureRowIndicesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          rowIndices_ = mutableCopy(rowIndices_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @return A list containing the rowIndices.
       */
      public java.util.List<java.lang.Integer>
          getRowIndicesList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(rowIndices_) : rowIndices_;
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @return The count of rowIndices.
       */
      public int getRowIndicesCount() {
        return rowIndices_.size();
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @param index The index of the element to return.
       * @return The rowIndices at the given index.
       */
      public int getRowIndices(int index) {
        return rowIndices_.getInt(index);
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @param index The index to set the value at.
       * @param value The rowIndices to set.
       * @return This builder for chaining.
       */
      public Builder setRowIndices(
          int index, int value) {
        ensureRowIndicesIsMutable();
        rowIndices_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @param value The rowIndices to add.
       * @return This builder for chaining.
       */
      public Builder addRowIndices(int value) {
        ensureRowIndicesIsMutable();
        rowIndices_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @param values The rowIndices to add.
       * @return This builder for chaining.
       */
      public Builder addAllRowIndices(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRowIndicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rowIndices_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRowIndices() {
        rowIndices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList values_ = emptyFloatList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          values_ = mutableCopy(values_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return A list containing the values.
       */
      public java.util.List<java.lang.Float>
          getValuesList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(values_) : values_;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public float getValues(int index) {
        return values_.getFloat(index);
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, float value) {
        ensureValuesIsMutable();
        values_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(float value) {
        ensureValuesIsMutable();
        values_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        values_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatFloat)
    }

    // @@protoc_insertion_point(class_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatFloat)
    private static final com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat();
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CscMatFloat>
        PARSER = new com.google.protobuf.AbstractParser<CscMatFloat>() {
      @java.lang.Override
      public CscMatFloat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CscMatFloat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CscMatFloat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CscMatFloat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatFloat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DenseMatInt32OrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatInt32)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    java.util.List<java.lang.Integer> getDimsList();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    int getDimsCount();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    int getDims(int index);

    /**
     * <code>repeated int32 values = 10;</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.Integer> getValuesList();
    /**
     * <code>repeated int32 values = 10;</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <code>repeated int32 values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    int getValues(int index);
  }
  /**
   * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatInt32}
   */
  public static final class DenseMatInt32 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatInt32)
      DenseMatInt32OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DenseMatInt32.newBuilder() to construct.
    private DenseMatInt32(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DenseMatInt32() {
      dims_ = emptyIntList();
      values_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DenseMatInt32();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DenseMatInt32(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dims_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dims_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                values_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              values_.addInt(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                values_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          values_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatInt32_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatInt32_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32.Builder.class);
    }

    public static final int DIMS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList dims_;
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDimsList() {
      return dims_;
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    public int getDimsCount() {
      return dims_.size();
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    public int getDims(int index) {
      return dims_.getInt(index);
    }
    private int dimsMemoizedSerializedSize = -1;

    public static final int VALUES_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList values_;
    /**
     * <code>repeated int32 values = 10;</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated int32 values = 10;</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated int32 values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public int getValues(int index) {
      return values_.getInt(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimsMemoizedSerializedSize);
      }
      for (int i = 0; i < dims_.size(); i++) {
        output.writeUInt32NoTag(dims_.getInt(i));
      }
      if (getValuesList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeInt32NoTag(values_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dims_.getInt(i));
        }
        size += dataSize;
        if (!getDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < values_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(values_.getInt(i));
        }
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32)) {
        return super.equals(obj);
      }
      com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 other = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32) obj;

      if (!getDimsList()
          .equals(other.getDimsList())) return false;
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimsCount() > 0) {
        hash = (37 * hash) + DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getDimsList().hashCode();
      }
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatInt32}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatInt32)
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatInt32_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatInt32_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32.Builder.class);
      }

      // Construct using com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        values_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatInt32_descriptor;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 getDefaultInstanceForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32.getDefaultInstance();
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 build() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 buildPartial() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 result = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dims_ = dims_;
        if (((bitField0_ & 0x00000002) != 0)) {
          values_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32) {
          return mergeFrom((com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 other) {
        if (other == com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32.getDefaultInstance()) return this;
        if (!other.dims_.isEmpty()) {
          if (dims_.isEmpty()) {
            dims_ = other.dims_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimsIsMutable();
            dims_.addAll(other.dims_);
          }
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList dims_ = emptyIntList();
      private void ensureDimsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dims_ = mutableCopy(dims_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return A list containing the dims.
       */
      public java.util.List<java.lang.Integer>
          getDimsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dims_) : dims_;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return The count of dims.
       */
      public int getDimsCount() {
        return dims_.size();
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index of the element to return.
       * @return The dims at the given index.
       */
      public int getDims(int index) {
        return dims_.getInt(index);
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index to set the value at.
       * @param value The dims to set.
       * @return This builder for chaining.
       */
      public Builder setDims(
          int index, int value) {
        ensureDimsIsMutable();
        dims_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param value The dims to add.
       * @return This builder for chaining.
       */
      public Builder addDims(int value) {
        ensureDimsIsMutable();
        dims_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param values The dims to add.
       * @return This builder for chaining.
       */
      public Builder addAllDims(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dims_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDims() {
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList values_ = emptyIntList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          values_ = mutableCopy(values_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return A list containing the values.
       */
      public java.util.List<java.lang.Integer>
          getValuesList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(values_) : values_;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public int getValues(int index) {
        return values_.getInt(index);
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, int value) {
        ensureValuesIsMutable();
        values_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(int value) {
        ensureValuesIsMutable();
        values_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        values_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatInt32)
    }

    // @@protoc_insertion_point(class_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.DenseMatInt32)
    private static final com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32();
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DenseMatInt32>
        PARSER = new com.google.protobuf.AbstractParser<DenseMatInt32>() {
      @java.lang.Override
      public DenseMatInt32 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DenseMatInt32(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DenseMatInt32> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DenseMatInt32> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.DenseMatInt32 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CooMatInt32OrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatInt32)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    java.util.List<java.lang.Integer> getDimsList();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    int getDimsCount();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    int getDims(int index);

    /**
     * <code>repeated uint32 rows = 2;</code>
     * @return A list containing the rows.
     */
    java.util.List<java.lang.Integer> getRowsList();
    /**
     * <code>repeated uint32 rows = 2;</code>
     * @return The count of rows.
     */
    int getRowsCount();
    /**
     * <code>repeated uint32 rows = 2;</code>
     * @param index The index of the element to return.
     * @return The rows at the given index.
     */
    int getRows(int index);

    /**
     * <code>repeated uint32 cols = 3;</code>
     * @return A list containing the cols.
     */
    java.util.List<java.lang.Integer> getColsList();
    /**
     * <code>repeated uint32 cols = 3;</code>
     * @return The count of cols.
     */
    int getColsCount();
    /**
     * <code>repeated uint32 cols = 3;</code>
     * @param index The index of the element to return.
     * @return The cols at the given index.
     */
    int getCols(int index);

    /**
     * <code>repeated int32 values = 10;</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.Integer> getValuesList();
    /**
     * <code>repeated int32 values = 10;</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <code>repeated int32 values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    int getValues(int index);
  }
  /**
   * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatInt32}
   */
  public static final class CooMatInt32 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatInt32)
      CooMatInt32OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CooMatInt32.newBuilder() to construct.
    private CooMatInt32(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CooMatInt32() {
      dims_ = emptyIntList();
      rows_ = emptyIntList();
      cols_ = emptyIntList();
      values_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CooMatInt32();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CooMatInt32(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dims_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dims_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                rows_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              rows_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                rows_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                rows_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                cols_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              cols_.addInt(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                cols_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cols_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                values_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              values_.addInt(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                values_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          rows_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          cols_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatInt32_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatInt32_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32.Builder.class);
    }

    public static final int DIMS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList dims_;
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDimsList() {
      return dims_;
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    public int getDimsCount() {
      return dims_.size();
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    public int getDims(int index) {
      return dims_.getInt(index);
    }
    private int dimsMemoizedSerializedSize = -1;

    public static final int ROWS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList rows_;
    /**
     * <code>repeated uint32 rows = 2;</code>
     * @return A list containing the rows.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated uint32 rows = 2;</code>
     * @return The count of rows.
     */
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated uint32 rows = 2;</code>
     * @param index The index of the element to return.
     * @return The rows at the given index.
     */
    public int getRows(int index) {
      return rows_.getInt(index);
    }
    private int rowsMemoizedSerializedSize = -1;

    public static final int COLS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList cols_;
    /**
     * <code>repeated uint32 cols = 3;</code>
     * @return A list containing the cols.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getColsList() {
      return cols_;
    }
    /**
     * <code>repeated uint32 cols = 3;</code>
     * @return The count of cols.
     */
    public int getColsCount() {
      return cols_.size();
    }
    /**
     * <code>repeated uint32 cols = 3;</code>
     * @param index The index of the element to return.
     * @return The cols at the given index.
     */
    public int getCols(int index) {
      return cols_.getInt(index);
    }
    private int colsMemoizedSerializedSize = -1;

    public static final int VALUES_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList values_;
    /**
     * <code>repeated int32 values = 10;</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated int32 values = 10;</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated int32 values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public int getValues(int index) {
      return values_.getInt(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimsMemoizedSerializedSize);
      }
      for (int i = 0; i < dims_.size(); i++) {
        output.writeUInt32NoTag(dims_.getInt(i));
      }
      if (getRowsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(rowsMemoizedSerializedSize);
      }
      for (int i = 0; i < rows_.size(); i++) {
        output.writeUInt32NoTag(rows_.getInt(i));
      }
      if (getColsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(colsMemoizedSerializedSize);
      }
      for (int i = 0; i < cols_.size(); i++) {
        output.writeUInt32NoTag(cols_.getInt(i));
      }
      if (getValuesList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeInt32NoTag(values_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dims_.getInt(i));
        }
        size += dataSize;
        if (!getDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rows_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(rows_.getInt(i));
        }
        size += dataSize;
        if (!getRowsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rowsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cols_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(cols_.getInt(i));
        }
        size += dataSize;
        if (!getColsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        colsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < values_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(values_.getInt(i));
        }
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32)) {
        return super.equals(obj);
      }
      com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 other = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32) obj;

      if (!getDimsList()
          .equals(other.getDimsList())) return false;
      if (!getRowsList()
          .equals(other.getRowsList())) return false;
      if (!getColsList()
          .equals(other.getColsList())) return false;
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimsCount() > 0) {
        hash = (37 * hash) + DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getDimsList().hashCode();
      }
      if (getRowsCount() > 0) {
        hash = (37 * hash) + ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getRowsList().hashCode();
      }
      if (getColsCount() > 0) {
        hash = (37 * hash) + COLS_FIELD_NUMBER;
        hash = (53 * hash) + getColsList().hashCode();
      }
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatInt32}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatInt32)
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatInt32_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatInt32_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32.Builder.class);
      }

      // Construct using com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        rows_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cols_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        values_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatInt32_descriptor;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 getDefaultInstanceForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32.getDefaultInstance();
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 build() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 buildPartial() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 result = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dims_ = dims_;
        if (((bitField0_ & 0x00000002) != 0)) {
          rows_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.rows_ = rows_;
        if (((bitField0_ & 0x00000004) != 0)) {
          cols_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cols_ = cols_;
        if (((bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32) {
          return mergeFrom((com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 other) {
        if (other == com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32.getDefaultInstance()) return this;
        if (!other.dims_.isEmpty()) {
          if (dims_.isEmpty()) {
            dims_ = other.dims_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimsIsMutable();
            dims_.addAll(other.dims_);
          }
          onChanged();
        }
        if (!other.rows_.isEmpty()) {
          if (rows_.isEmpty()) {
            rows_ = other.rows_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRowsIsMutable();
            rows_.addAll(other.rows_);
          }
          onChanged();
        }
        if (!other.cols_.isEmpty()) {
          if (cols_.isEmpty()) {
            cols_ = other.cols_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureColsIsMutable();
            cols_.addAll(other.cols_);
          }
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList dims_ = emptyIntList();
      private void ensureDimsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dims_ = mutableCopy(dims_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return A list containing the dims.
       */
      public java.util.List<java.lang.Integer>
          getDimsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dims_) : dims_;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return The count of dims.
       */
      public int getDimsCount() {
        return dims_.size();
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index of the element to return.
       * @return The dims at the given index.
       */
      public int getDims(int index) {
        return dims_.getInt(index);
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index to set the value at.
       * @param value The dims to set.
       * @return This builder for chaining.
       */
      public Builder setDims(
          int index, int value) {
        ensureDimsIsMutable();
        dims_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param value The dims to add.
       * @return This builder for chaining.
       */
      public Builder addDims(int value) {
        ensureDimsIsMutable();
        dims_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param values The dims to add.
       * @return This builder for chaining.
       */
      public Builder addAllDims(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dims_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDims() {
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList rows_ = emptyIntList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          rows_ = mutableCopy(rows_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @return A list containing the rows.
       */
      public java.util.List<java.lang.Integer>
          getRowsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(rows_) : rows_;
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @return The count of rows.
       */
      public int getRowsCount() {
        return rows_.size();
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @param index The index of the element to return.
       * @return The rows at the given index.
       */
      public int getRows(int index) {
        return rows_.getInt(index);
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @param index The index to set the value at.
       * @param value The rows to set.
       * @return This builder for chaining.
       */
      public Builder setRows(
          int index, int value) {
        ensureRowsIsMutable();
        rows_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @param value The rows to add.
       * @return This builder for chaining.
       */
      public Builder addRows(int value) {
        ensureRowsIsMutable();
        rows_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @param values The rows to add.
       * @return This builder for chaining.
       */
      public Builder addAllRows(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRowsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rows_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 rows = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRows() {
        rows_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList cols_ = emptyIntList();
      private void ensureColsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          cols_ = mutableCopy(cols_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @return A list containing the cols.
       */
      public java.util.List<java.lang.Integer>
          getColsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(cols_) : cols_;
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @return The count of cols.
       */
      public int getColsCount() {
        return cols_.size();
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @param index The index of the element to return.
       * @return The cols at the given index.
       */
      public int getCols(int index) {
        return cols_.getInt(index);
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @param index The index to set the value at.
       * @param value The cols to set.
       * @return This builder for chaining.
       */
      public Builder setCols(
          int index, int value) {
        ensureColsIsMutable();
        cols_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @param value The cols to add.
       * @return This builder for chaining.
       */
      public Builder addCols(int value) {
        ensureColsIsMutable();
        cols_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @param values The cols to add.
       * @return This builder for chaining.
       */
      public Builder addAllCols(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureColsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cols_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 cols = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCols() {
        cols_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList values_ = emptyIntList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          values_ = mutableCopy(values_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return A list containing the values.
       */
      public java.util.List<java.lang.Integer>
          getValuesList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(values_) : values_;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public int getValues(int index) {
        return values_.getInt(index);
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, int value) {
        ensureValuesIsMutable();
        values_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(int value) {
        ensureValuesIsMutable();
        values_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        values_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatInt32)
    }

    // @@protoc_insertion_point(class_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CooMatInt32)
    private static final com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32();
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CooMatInt32>
        PARSER = new com.google.protobuf.AbstractParser<CooMatInt32>() {
      @java.lang.Override
      public CooMatInt32 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CooMatInt32(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CooMatInt32> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CooMatInt32> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CooMatInt32 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CsrMatInt32OrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatInt32)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    java.util.List<java.lang.Integer> getDimsList();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    int getDimsCount();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    int getDims(int index);

    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @return A list containing the rowOffsets.
     */
    java.util.List<java.lang.Integer> getRowOffsetsList();
    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @return The count of rowOffsets.
     */
    int getRowOffsetsCount();
    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @param index The index of the element to return.
     * @return The rowOffsets at the given index.
     */
    int getRowOffsets(int index);

    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @return A list containing the colIndices.
     */
    java.util.List<java.lang.Integer> getColIndicesList();
    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @return The count of colIndices.
     */
    int getColIndicesCount();
    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @param index The index of the element to return.
     * @return The colIndices at the given index.
     */
    int getColIndices(int index);

    /**
     * <code>repeated int32 values = 10;</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.Integer> getValuesList();
    /**
     * <code>repeated int32 values = 10;</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <code>repeated int32 values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    int getValues(int index);
  }
  /**
   * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatInt32}
   */
  public static final class CsrMatInt32 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatInt32)
      CsrMatInt32OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CsrMatInt32.newBuilder() to construct.
    private CsrMatInt32(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CsrMatInt32() {
      dims_ = emptyIntList();
      rowOffsets_ = emptyIntList();
      colIndices_ = emptyIntList();
      values_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CsrMatInt32();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CsrMatInt32(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dims_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dims_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                rowOffsets_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              rowOffsets_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                rowOffsets_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                rowOffsets_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                colIndices_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              colIndices_.addInt(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                colIndices_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                colIndices_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                values_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              values_.addInt(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                values_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          rowOffsets_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          colIndices_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatInt32_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatInt32_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32.Builder.class);
    }

    public static final int DIMS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList dims_;
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDimsList() {
      return dims_;
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    public int getDimsCount() {
      return dims_.size();
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    public int getDims(int index) {
      return dims_.getInt(index);
    }
    private int dimsMemoizedSerializedSize = -1;

    public static final int ROW_OFFSETS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList rowOffsets_;
    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @return A list containing the rowOffsets.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRowOffsetsList() {
      return rowOffsets_;
    }
    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @return The count of rowOffsets.
     */
    public int getRowOffsetsCount() {
      return rowOffsets_.size();
    }
    /**
     * <code>repeated uint32 row_offsets = 2;</code>
     * @param index The index of the element to return.
     * @return The rowOffsets at the given index.
     */
    public int getRowOffsets(int index) {
      return rowOffsets_.getInt(index);
    }
    private int rowOffsetsMemoizedSerializedSize = -1;

    public static final int COL_INDICES_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList colIndices_;
    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @return A list containing the colIndices.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getColIndicesList() {
      return colIndices_;
    }
    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @return The count of colIndices.
     */
    public int getColIndicesCount() {
      return colIndices_.size();
    }
    /**
     * <code>repeated uint32 col_indices = 3;</code>
     * @param index The index of the element to return.
     * @return The colIndices at the given index.
     */
    public int getColIndices(int index) {
      return colIndices_.getInt(index);
    }
    private int colIndicesMemoizedSerializedSize = -1;

    public static final int VALUES_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList values_;
    /**
     * <code>repeated int32 values = 10;</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated int32 values = 10;</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated int32 values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public int getValues(int index) {
      return values_.getInt(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimsMemoizedSerializedSize);
      }
      for (int i = 0; i < dims_.size(); i++) {
        output.writeUInt32NoTag(dims_.getInt(i));
      }
      if (getRowOffsetsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(rowOffsetsMemoizedSerializedSize);
      }
      for (int i = 0; i < rowOffsets_.size(); i++) {
        output.writeUInt32NoTag(rowOffsets_.getInt(i));
      }
      if (getColIndicesList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(colIndicesMemoizedSerializedSize);
      }
      for (int i = 0; i < colIndices_.size(); i++) {
        output.writeUInt32NoTag(colIndices_.getInt(i));
      }
      if (getValuesList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeInt32NoTag(values_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dims_.getInt(i));
        }
        size += dataSize;
        if (!getDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rowOffsets_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(rowOffsets_.getInt(i));
        }
        size += dataSize;
        if (!getRowOffsetsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rowOffsetsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < colIndices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(colIndices_.getInt(i));
        }
        size += dataSize;
        if (!getColIndicesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        colIndicesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < values_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(values_.getInt(i));
        }
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32)) {
        return super.equals(obj);
      }
      com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 other = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32) obj;

      if (!getDimsList()
          .equals(other.getDimsList())) return false;
      if (!getRowOffsetsList()
          .equals(other.getRowOffsetsList())) return false;
      if (!getColIndicesList()
          .equals(other.getColIndicesList())) return false;
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimsCount() > 0) {
        hash = (37 * hash) + DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getDimsList().hashCode();
      }
      if (getRowOffsetsCount() > 0) {
        hash = (37 * hash) + ROW_OFFSETS_FIELD_NUMBER;
        hash = (53 * hash) + getRowOffsetsList().hashCode();
      }
      if (getColIndicesCount() > 0) {
        hash = (37 * hash) + COL_INDICES_FIELD_NUMBER;
        hash = (53 * hash) + getColIndicesList().hashCode();
      }
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatInt32}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatInt32)
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatInt32_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatInt32_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32.Builder.class);
      }

      // Construct using com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        rowOffsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        colIndices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        values_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatInt32_descriptor;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 getDefaultInstanceForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32.getDefaultInstance();
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 build() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 buildPartial() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 result = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dims_ = dims_;
        if (((bitField0_ & 0x00000002) != 0)) {
          rowOffsets_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.rowOffsets_ = rowOffsets_;
        if (((bitField0_ & 0x00000004) != 0)) {
          colIndices_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.colIndices_ = colIndices_;
        if (((bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32) {
          return mergeFrom((com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 other) {
        if (other == com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32.getDefaultInstance()) return this;
        if (!other.dims_.isEmpty()) {
          if (dims_.isEmpty()) {
            dims_ = other.dims_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimsIsMutable();
            dims_.addAll(other.dims_);
          }
          onChanged();
        }
        if (!other.rowOffsets_.isEmpty()) {
          if (rowOffsets_.isEmpty()) {
            rowOffsets_ = other.rowOffsets_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRowOffsetsIsMutable();
            rowOffsets_.addAll(other.rowOffsets_);
          }
          onChanged();
        }
        if (!other.colIndices_.isEmpty()) {
          if (colIndices_.isEmpty()) {
            colIndices_ = other.colIndices_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureColIndicesIsMutable();
            colIndices_.addAll(other.colIndices_);
          }
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList dims_ = emptyIntList();
      private void ensureDimsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dims_ = mutableCopy(dims_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return A list containing the dims.
       */
      public java.util.List<java.lang.Integer>
          getDimsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dims_) : dims_;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return The count of dims.
       */
      public int getDimsCount() {
        return dims_.size();
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index of the element to return.
       * @return The dims at the given index.
       */
      public int getDims(int index) {
        return dims_.getInt(index);
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index to set the value at.
       * @param value The dims to set.
       * @return This builder for chaining.
       */
      public Builder setDims(
          int index, int value) {
        ensureDimsIsMutable();
        dims_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param value The dims to add.
       * @return This builder for chaining.
       */
      public Builder addDims(int value) {
        ensureDimsIsMutable();
        dims_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param values The dims to add.
       * @return This builder for chaining.
       */
      public Builder addAllDims(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dims_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDims() {
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList rowOffsets_ = emptyIntList();
      private void ensureRowOffsetsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          rowOffsets_ = mutableCopy(rowOffsets_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @return A list containing the rowOffsets.
       */
      public java.util.List<java.lang.Integer>
          getRowOffsetsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(rowOffsets_) : rowOffsets_;
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @return The count of rowOffsets.
       */
      public int getRowOffsetsCount() {
        return rowOffsets_.size();
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @param index The index of the element to return.
       * @return The rowOffsets at the given index.
       */
      public int getRowOffsets(int index) {
        return rowOffsets_.getInt(index);
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @param index The index to set the value at.
       * @param value The rowOffsets to set.
       * @return This builder for chaining.
       */
      public Builder setRowOffsets(
          int index, int value) {
        ensureRowOffsetsIsMutable();
        rowOffsets_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @param value The rowOffsets to add.
       * @return This builder for chaining.
       */
      public Builder addRowOffsets(int value) {
        ensureRowOffsetsIsMutable();
        rowOffsets_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @param values The rowOffsets to add.
       * @return This builder for chaining.
       */
      public Builder addAllRowOffsets(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRowOffsetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rowOffsets_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_offsets = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRowOffsets() {
        rowOffsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList colIndices_ = emptyIntList();
      private void ensureColIndicesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          colIndices_ = mutableCopy(colIndices_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @return A list containing the colIndices.
       */
      public java.util.List<java.lang.Integer>
          getColIndicesList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(colIndices_) : colIndices_;
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @return The count of colIndices.
       */
      public int getColIndicesCount() {
        return colIndices_.size();
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @param index The index of the element to return.
       * @return The colIndices at the given index.
       */
      public int getColIndices(int index) {
        return colIndices_.getInt(index);
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @param index The index to set the value at.
       * @param value The colIndices to set.
       * @return This builder for chaining.
       */
      public Builder setColIndices(
          int index, int value) {
        ensureColIndicesIsMutable();
        colIndices_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @param value The colIndices to add.
       * @return This builder for chaining.
       */
      public Builder addColIndices(int value) {
        ensureColIndicesIsMutable();
        colIndices_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @param values The colIndices to add.
       * @return This builder for chaining.
       */
      public Builder addAllColIndices(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureColIndicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, colIndices_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_indices = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearColIndices() {
        colIndices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList values_ = emptyIntList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          values_ = mutableCopy(values_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return A list containing the values.
       */
      public java.util.List<java.lang.Integer>
          getValuesList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(values_) : values_;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public int getValues(int index) {
        return values_.getInt(index);
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, int value) {
        ensureValuesIsMutable();
        values_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(int value) {
        ensureValuesIsMutable();
        values_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        values_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatInt32)
    }

    // @@protoc_insertion_point(class_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CsrMatInt32)
    private static final com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32();
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CsrMatInt32>
        PARSER = new com.google.protobuf.AbstractParser<CsrMatInt32>() {
      @java.lang.Override
      public CsrMatInt32 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CsrMatInt32(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CsrMatInt32> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CsrMatInt32> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CsrMatInt32 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CscMatInt32OrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatInt32)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    java.util.List<java.lang.Integer> getDimsList();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    int getDimsCount();
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    int getDims(int index);

    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @return A list containing the colOffsets.
     */
    java.util.List<java.lang.Integer> getColOffsetsList();
    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @return The count of colOffsets.
     */
    int getColOffsetsCount();
    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @param index The index of the element to return.
     * @return The colOffsets at the given index.
     */
    int getColOffsets(int index);

    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @return A list containing the rowIndices.
     */
    java.util.List<java.lang.Integer> getRowIndicesList();
    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @return The count of rowIndices.
     */
    int getRowIndicesCount();
    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @param index The index of the element to return.
     * @return The rowIndices at the given index.
     */
    int getRowIndices(int index);

    /**
     * <code>repeated int32 values = 10;</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.Integer> getValuesList();
    /**
     * <code>repeated int32 values = 10;</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <code>repeated int32 values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    int getValues(int index);
  }
  /**
   * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatInt32}
   */
  public static final class CscMatInt32 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatInt32)
      CscMatInt32OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CscMatInt32.newBuilder() to construct.
    private CscMatInt32(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CscMatInt32() {
      dims_ = emptyIntList();
      colOffsets_ = emptyIntList();
      rowIndices_ = emptyIntList();
      values_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CscMatInt32();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CscMatInt32(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              dims_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dims_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dims_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                colOffsets_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              colOffsets_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                colOffsets_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                colOffsets_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                rowIndices_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              rowIndices_.addInt(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                rowIndices_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                rowIndices_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                values_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              values_.addInt(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                values_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          colOffsets_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          rowIndices_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatInt32_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatInt32_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32.Builder.class);
    }

    public static final int DIMS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList dims_;
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return A list containing the dims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDimsList() {
      return dims_;
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @return The count of dims.
     */
    public int getDimsCount() {
      return dims_.size();
    }
    /**
     * <code>repeated uint32 dims = 1;</code>
     * @param index The index of the element to return.
     * @return The dims at the given index.
     */
    public int getDims(int index) {
      return dims_.getInt(index);
    }
    private int dimsMemoizedSerializedSize = -1;

    public static final int COL_OFFSETS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList colOffsets_;
    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @return A list containing the colOffsets.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getColOffsetsList() {
      return colOffsets_;
    }
    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @return The count of colOffsets.
     */
    public int getColOffsetsCount() {
      return colOffsets_.size();
    }
    /**
     * <code>repeated uint32 col_offsets = 2;</code>
     * @param index The index of the element to return.
     * @return The colOffsets at the given index.
     */
    public int getColOffsets(int index) {
      return colOffsets_.getInt(index);
    }
    private int colOffsetsMemoizedSerializedSize = -1;

    public static final int ROW_INDICES_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList rowIndices_;
    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @return A list containing the rowIndices.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRowIndicesList() {
      return rowIndices_;
    }
    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @return The count of rowIndices.
     */
    public int getRowIndicesCount() {
      return rowIndices_.size();
    }
    /**
     * <code>repeated uint32 row_indices = 3;</code>
     * @param index The index of the element to return.
     * @return The rowIndices at the given index.
     */
    public int getRowIndices(int index) {
      return rowIndices_.getInt(index);
    }
    private int rowIndicesMemoizedSerializedSize = -1;

    public static final int VALUES_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList values_;
    /**
     * <code>repeated int32 values = 10;</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated int32 values = 10;</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated int32 values = 10;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public int getValues(int index) {
      return values_.getInt(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimsMemoizedSerializedSize);
      }
      for (int i = 0; i < dims_.size(); i++) {
        output.writeUInt32NoTag(dims_.getInt(i));
      }
      if (getColOffsetsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(colOffsetsMemoizedSerializedSize);
      }
      for (int i = 0; i < colOffsets_.size(); i++) {
        output.writeUInt32NoTag(colOffsets_.getInt(i));
      }
      if (getRowIndicesList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(rowIndicesMemoizedSerializedSize);
      }
      for (int i = 0; i < rowIndices_.size(); i++) {
        output.writeUInt32NoTag(rowIndices_.getInt(i));
      }
      if (getValuesList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeInt32NoTag(values_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dims_.getInt(i));
        }
        size += dataSize;
        if (!getDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < colOffsets_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(colOffsets_.getInt(i));
        }
        size += dataSize;
        if (!getColOffsetsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        colOffsetsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rowIndices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(rowIndices_.getInt(i));
        }
        size += dataSize;
        if (!getRowIndicesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rowIndicesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < values_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(values_.getInt(i));
        }
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32)) {
        return super.equals(obj);
      }
      com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 other = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32) obj;

      if (!getDimsList()
          .equals(other.getDimsList())) return false;
      if (!getColOffsetsList()
          .equals(other.getColOffsetsList())) return false;
      if (!getRowIndicesList()
          .equals(other.getRowIndicesList())) return false;
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimsCount() > 0) {
        hash = (37 * hash) + DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getDimsList().hashCode();
      }
      if (getColOffsetsCount() > 0) {
        hash = (37 * hash) + COL_OFFSETS_FIELD_NUMBER;
        hash = (53 * hash) + getColOffsetsList().hashCode();
      }
      if (getRowIndicesCount() > 0) {
        hash = (37 * hash) + ROW_INDICES_FIELD_NUMBER;
        hash = (53 * hash) + getRowIndicesList().hashCode();
      }
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatInt32}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatInt32)
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatInt32_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatInt32_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32.class, com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32.Builder.class);
      }

      // Construct using com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        colOffsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        rowIndices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        values_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatInt32_descriptor;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 getDefaultInstanceForType() {
        return com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32.getDefaultInstance();
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 build() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 buildPartial() {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 result = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          dims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dims_ = dims_;
        if (((bitField0_ & 0x00000002) != 0)) {
          colOffsets_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.colOffsets_ = colOffsets_;
        if (((bitField0_ & 0x00000004) != 0)) {
          rowIndices_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.rowIndices_ = rowIndices_;
        if (((bitField0_ & 0x00000008) != 0)) {
          values_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32) {
          return mergeFrom((com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 other) {
        if (other == com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32.getDefaultInstance()) return this;
        if (!other.dims_.isEmpty()) {
          if (dims_.isEmpty()) {
            dims_ = other.dims_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimsIsMutable();
            dims_.addAll(other.dims_);
          }
          onChanged();
        }
        if (!other.colOffsets_.isEmpty()) {
          if (colOffsets_.isEmpty()) {
            colOffsets_ = other.colOffsets_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureColOffsetsIsMutable();
            colOffsets_.addAll(other.colOffsets_);
          }
          onChanged();
        }
        if (!other.rowIndices_.isEmpty()) {
          if (rowIndices_.isEmpty()) {
            rowIndices_ = other.rowIndices_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRowIndicesIsMutable();
            rowIndices_.addAll(other.rowIndices_);
          }
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList dims_ = emptyIntList();
      private void ensureDimsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dims_ = mutableCopy(dims_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return A list containing the dims.
       */
      public java.util.List<java.lang.Integer>
          getDimsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dims_) : dims_;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return The count of dims.
       */
      public int getDimsCount() {
        return dims_.size();
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index of the element to return.
       * @return The dims at the given index.
       */
      public int getDims(int index) {
        return dims_.getInt(index);
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param index The index to set the value at.
       * @param value The dims to set.
       * @return This builder for chaining.
       */
      public Builder setDims(
          int index, int value) {
        ensureDimsIsMutable();
        dims_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param value The dims to add.
       * @return This builder for chaining.
       */
      public Builder addDims(int value) {
        ensureDimsIsMutable();
        dims_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @param values The dims to add.
       * @return This builder for chaining.
       */
      public Builder addAllDims(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dims_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 dims = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDims() {
        dims_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList colOffsets_ = emptyIntList();
      private void ensureColOffsetsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          colOffsets_ = mutableCopy(colOffsets_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @return A list containing the colOffsets.
       */
      public java.util.List<java.lang.Integer>
          getColOffsetsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(colOffsets_) : colOffsets_;
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @return The count of colOffsets.
       */
      public int getColOffsetsCount() {
        return colOffsets_.size();
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @param index The index of the element to return.
       * @return The colOffsets at the given index.
       */
      public int getColOffsets(int index) {
        return colOffsets_.getInt(index);
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @param index The index to set the value at.
       * @param value The colOffsets to set.
       * @return This builder for chaining.
       */
      public Builder setColOffsets(
          int index, int value) {
        ensureColOffsetsIsMutable();
        colOffsets_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @param value The colOffsets to add.
       * @return This builder for chaining.
       */
      public Builder addColOffsets(int value) {
        ensureColOffsetsIsMutable();
        colOffsets_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @param values The colOffsets to add.
       * @return This builder for chaining.
       */
      public Builder addAllColOffsets(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureColOffsetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, colOffsets_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 col_offsets = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearColOffsets() {
        colOffsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList rowIndices_ = emptyIntList();
      private void ensureRowIndicesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          rowIndices_ = mutableCopy(rowIndices_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @return A list containing the rowIndices.
       */
      public java.util.List<java.lang.Integer>
          getRowIndicesList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(rowIndices_) : rowIndices_;
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @return The count of rowIndices.
       */
      public int getRowIndicesCount() {
        return rowIndices_.size();
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @param index The index of the element to return.
       * @return The rowIndices at the given index.
       */
      public int getRowIndices(int index) {
        return rowIndices_.getInt(index);
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @param index The index to set the value at.
       * @param value The rowIndices to set.
       * @return This builder for chaining.
       */
      public Builder setRowIndices(
          int index, int value) {
        ensureRowIndicesIsMutable();
        rowIndices_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @param value The rowIndices to add.
       * @return This builder for chaining.
       */
      public Builder addRowIndices(int value) {
        ensureRowIndicesIsMutable();
        rowIndices_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @param values The rowIndices to add.
       * @return This builder for chaining.
       */
      public Builder addAllRowIndices(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRowIndicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rowIndices_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 row_indices = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRowIndices() {
        rowIndices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList values_ = emptyIntList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          values_ = mutableCopy(values_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return A list containing the values.
       */
      public java.util.List<java.lang.Integer>
          getValuesList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(values_) : values_;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public int getValues(int index) {
        return values_.getInt(index);
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, int value) {
        ensureValuesIsMutable();
        values_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(int value) {
        ensureValuesIsMutable();
        values_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        values_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatInt32)
    }

    // @@protoc_insertion_point(class_scope:com.hitnslab.dnssecurity.deeparcher.api.proto.CscMatInt32)
    private static final com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32();
    }

    public static com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CscMatInt32>
        PARSER = new com.google.protobuf.AbstractParser<CscMatInt32>() {
      @java.lang.Override
      public CscMatInt32 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CscMatInt32(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CscMatInt32> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CscMatInt32> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hitnslab.dnssecurity.deeparcher.api.proto.generated.java.MatrixProto.CscMatInt32 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatFloat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatFloat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatFloat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatFloat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatFloat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatFloat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatFloat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatFloat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatInt32_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatInt32_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatInt32_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatInt32_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatInt32_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatInt32_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatInt32_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatInt32_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:com/hitnslab/dnssecurity/deeparcher/ap" +
      "i/proto/matrix.proto\022-com.hitnslab.dnsse" +
      "curity.deeparcher.api.proto\"-\n\rDenseMatF" +
      "loat\022\014\n\004dims\030\001 \003(\r\022\016\n\006values\030\n \003(\002\"G\n\013Co" +
      "oMatFloat\022\014\n\004dims\030\001 \003(\r\022\014\n\004rows\030\002 \003(\r\022\014\n" +
      "\004cols\030\003 \003(\r\022\016\n\006values\030\n \003(\002\"U\n\013CsrMatFlo" +
      "at\022\014\n\004dims\030\001 \003(\r\022\023\n\013row_offsets\030\002 \003(\r\022\023\n" +
      "\013col_indices\030\003 \003(\r\022\016\n\006values\030\n \003(\002\"U\n\013Cs" +
      "cMatFloat\022\014\n\004dims\030\001 \003(\r\022\023\n\013col_offsets\030\002" +
      " \003(\r\022\023\n\013row_indices\030\003 \003(\r\022\016\n\006values\030\n \003(" +
      "\002\"-\n\rDenseMatInt32\022\014\n\004dims\030\001 \003(\r\022\016\n\006valu" +
      "es\030\n \003(\005\"G\n\013CooMatInt32\022\014\n\004dims\030\001 \003(\r\022\014\n" +
      "\004rows\030\002 \003(\r\022\014\n\004cols\030\003 \003(\r\022\016\n\006values\030\n \003(" +
      "\005\"U\n\013CsrMatInt32\022\014\n\004dims\030\001 \003(\r\022\023\n\013row_of" +
      "fsets\030\002 \003(\r\022\023\n\013col_indices\030\003 \003(\r\022\016\n\006valu" +
      "es\030\n \003(\005\"U\n\013CscMatInt32\022\014\n\004dims\030\001 \003(\r\022\023\n" +
      "\013col_offsets\030\002 \003(\r\022\023\n\013row_indices\030\003 \003(\r\022" +
      "\016\n\006values\030\n \003(\005BP\n<com.hitnslab.dnssecur" +
      "ity.deeparcher.api.proto.generated.javaB" +
      "\013MatrixProtoH\001\370\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatFloat_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatFloat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatFloat_descriptor,
        new java.lang.String[] { "Dims", "Values", });
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatFloat_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatFloat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatFloat_descriptor,
        new java.lang.String[] { "Dims", "Rows", "Cols", "Values", });
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatFloat_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatFloat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatFloat_descriptor,
        new java.lang.String[] { "Dims", "RowOffsets", "ColIndices", "Values", });
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatFloat_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatFloat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatFloat_descriptor,
        new java.lang.String[] { "Dims", "ColOffsets", "RowIndices", "Values", });
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatInt32_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatInt32_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_DenseMatInt32_descriptor,
        new java.lang.String[] { "Dims", "Values", });
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatInt32_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatInt32_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CooMatInt32_descriptor,
        new java.lang.String[] { "Dims", "Rows", "Cols", "Values", });
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatInt32_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatInt32_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CsrMatInt32_descriptor,
        new java.lang.String[] { "Dims", "RowOffsets", "ColIndices", "Values", });
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatInt32_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatInt32_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_hitnslab_dnssecurity_deeparcher_api_proto_CscMatInt32_descriptor,
        new java.lang.String[] { "Dims", "ColOffsets", "RowIndices", "Values", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
