#Package pdns-data-loader Kaniko Image On Branch:
#  extends: .build_image_kaniko
#  stage: package
#  script:
#    - /kaniko/default-executor --dockerfile Dockerfile-CI --destination $CI_REGISTRY_IMAGE:${CI_COMMIT_BRANCH}
#  except:
#    - master
#  only:
#    - branches
#
#Package pdns-data-loader Kaniko Image On Master:
#  extends: .build_image_kaniko
#  stage: package
#  script:
#    - /kaniko/default-executor --dockerfile Dockerfile-CI --destination $CI_REGISTRY_IMAGE:latest
#  only:
#    - master

#Package pdns-data-loader Docker Image On Branch:
#  extends: .build_image_docker
#  stage: package
#  script:
#    - default-docker build $DOCKER_DEFAULT_BUILD_OPTS -f Dockerfile-CI -t $CI_REGISTRY_IMAGE:${CI_COMMIT_BRANCH} .
#    - default-docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_BRANCH}
#  except:
#    - master
#  only:
#    - branches
#  needs:
#    - Maven Build

#Package pdns-data-loader Image On Branch:
#  extends: .build_image_maven
#  stage: package
#  script:
#    - |
#      mvn $MAVEN_CLI_OPTS \
#        compile jib:build \
#        -pl pdns-data-loader \
#        $JIB_DEFAULT_OPTS \
#        -Djib.to.image=$CI_REGISTRY_IMAGE/pdns-data-loader:${CI_COMMIT_BRANCH}
#  except:
#    - master
#  only:
#    - branches
#  needs:
#    - Maven Build Root

#Package stream Image On Branch:
#  extends: .build_image_maven
#  stage: package
#  script:
#    - |
#      mvn $MAVEN_CLI_OPTS \
#        compile jib:build \
#        -pl stream \
#        $JIB_DEFAULT_OPTS \
#        -Djib.to.image=$CI_REGISTRY_IMAGE/stream:${CI_COMMIT_BRANCH}
#  except:
#    - master
#  only:
#    - branches
#  needs:
#    - Maven Build Root

Package Modules Custom JVM Image On Branch:
  extends: .build_image_maven
  stage: package
  script:
    - |
      for JVM in graalvm-ee-java11; do
        for MOD in stream pdns-data-loader; do
            mvn $MAVEN_CLI_OPTS \
                compile jib:build \
                -pl ${MOD} \
                $JIB_DEFAULT_OPTS \
                -Djib.from.image=leeyanzhe/jvm:${JVM} \
                -Djib.to.image=$CI_REGISTRY_IMAGE/${MOD}:${CI_COMMIT_BRANCH}-${JVM} ;
        done
      done
  except:
    - master
  only:
    - branches
  needs:
    - Maven Build Root

#Package pdns-data-loader Docker Image On Master:
#  extends: .build_image_docker
#  stage: package
#  script:
#    - default-docker build $DOCKER_DEFAULT_BUILD_OPTS -f Dockerfile-CI -t $CI_REGISTRY_IMAGE:latest .
#    - default-docker push $CI_REGISTRY_IMAGE:latest
#  only:
#    - master
#  needs:
#    - Maven Build

#Package pdns-data-loader Image On Master:
#  extends: .build_image_maven
#  stage: package
#  script:
#    - |
#      mvn $MAVEN_CLI_OPTS \
#        compile jib:build \
#        -pl pdns-data-loader \
#        $JIB_DEFAULT_OPTS \
#        -Djib.to.image=$CI_REGISTRY_IMAGE/pdns-data-loader:latest
#  only:
#    - master
#  needs:
#    - Maven Build Root

Package Modules Custom JVM Image On Master:
  extends: .build_image_maven
  stage: package
  script:
    - |
      for JVM in graalvm-ee-java11; do
        for MOD in stream pdns-data-loader; do
            mvn $MAVEN_CLI_OPTS \
                compile jib:build \
                -pl ${MOD} \
                $JIB_DEFAULT_OPTS \
                -Djib.from.image=leeyanzhe/jvm:${JVM} \
                -Djib.to.image=$CI_REGISTRY_IMAGE/${MOD}:${JVM}
        done
      done
  only:
    - master
  needs:
    - Maven Build Root

#Package stream Image On Master:
#  extends: .build_image_maven
#  stage: package
#  script:
#    - |
#      mvn $MAVEN_CLI_OPTS \
#        compile jib:build \
#        -pl stream \
#        $JIB_DEFAULT_OPTS \
#        -Djib.to.image=$CI_REGISTRY_IMAGE/stream:latest
#  only:
#    - master
#  needs:
#    - Maven Build Root

Package pdns-data-loader Graal Native Image:
  image: leeyanzhe/jvm:graalvm-ee-java11-full
  stage: package
  allow_failure: true
  variables:
    NATIVE_IMAGE_VERSION: 21.0.0 # ${JAVA_HOME:23:-1}
  script:
    - |
      cd pdns-data-loader && ./graal-compile.sh
  needs:
    - Maven Build Graal
  artifacts:
    expire_in: 30 mins
    paths:
      - "*/target"
