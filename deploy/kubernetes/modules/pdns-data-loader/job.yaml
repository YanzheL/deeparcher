apiVersion: batch/v1
kind: Job
metadata:
  labels: &labels
    app.kubernetes.io/name: pdns-data-loader
    app.kubernetes.io/part-of: deeparcher
    app.kubernetes.io/component: pdns-data-loader
  name: pdns-data-loader
  namespace: default
spec:
  parallelism: 1
  completions: 1
  backoffLimit: 1
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      enableServiceLinks: false
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - pdns-data-loader
      nodeSelector:
        kubernetes.io/hostname: k8s-gpu-node0
      imagePullSecrets:
        - name: default-registry-key
      containers:
        - name: pdns-data-loader
          #          image: registry.hitnslab.com/dns-security/malicious-domain-rating/deeparcher/pdns-data-loader:dev-graalvm
          image: registry.gitlab.com/yanzhel/deeparcher/pdns-data-loader:dev-graalvm-ee-java11
          imagePullPolicy: Always
          ports:
            - containerPort: 9999
              protocol: TCP
              name: jmx
          args:
            - "pattern=file:///datasource/pdns_logs/**/*.log"
          env:
            - name: SPRING_DATASOURCE_USERNAME
              value: springbatch
            - name: SPRING_DATASOURCE_PASSWORD
              value: HITnsLAB-springbatch!
            - name: JAVA_TOOL_OPTIONS
              value: -Xms1g -Xmx4g -XX:+UnlockExperimentalVMOptions -XX:+EagerJVMCI -Dgraal.MitigateSpeculativeExecutionAttacks=None -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dgraal.ShowConfiguration=info
            - name: SPRING_KAFKA_SSL_KEY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kafka-user-pdns-data-loader
                  key: user.password
            - name: SPRING_KAFKA_SSL_TRUST_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: truststore
                  key: password
          resources:
            requests:
              cpu: '1'
              memory: 1Gi
            limits:
              cpu: '12'
              memory: 5Gi
          volumeMounts:
            - mountPath: /datasource
              name: datasource
            - mountPath: /var/run/secrets/java.io/keystores/
              name: keystores
            - mountPath: /var/run/secrets/java.io/truststores/
              name: truststores
            - mountPath: /app/resources/application.yml
              name: config
              subPath: application.yml
      restartPolicy: Never
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      volumes:
        - name: keystores
          secret:
            secretName: kafka-user-pdns-data-loader
            defaultMode: 256
        - name: truststores
          secret:
            secretName: truststore
            defaultMode: 256
        - name: datasource
          persistentVolumeClaim:
            claimName: nfs-k8s-gpu-node0
            # claimName: nfs-ns-2-b
        - name: config
          configMap:
            name: pdns-data-loader
            items:
              - key: application.yml
                path: application.yml
---
apiVersion: v1
kind: Service
metadata:
  name: pdns-data-loader
  namespace: default
  labels: &labels
    app.kubernetes.io/name: pdns-data-loader
    app.kubernetes.io/part-of: deeparcher
    app.kubernetes.io/component: pdns-data-loader
spec:
  type: ClusterIP
  ports:
    - name: jmx
      port: 9999
      protocol: TCP
  selector:
    <<: *labels