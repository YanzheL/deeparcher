apiVersion: apps/v1
kind: Deployment
metadata:
  labels: &labels
    app.kubernetes.io/name: stream-aggregator-full
    app.kubernetes.io/part-of: deeparcher
    app.kubernetes.io/component: stream
  name: stream-aggregator-full
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      <<: *labels
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      nodeSelector:
        kubernetes.io/hostname: k8s-gpu-node0
      enableServiceLinks: false
      imagePullSecrets:
        - name: default-registry-key
      containers:
        - name: stream
          # image: registry.lee-service.com/yanzhel/deeparcher/stream:dev-graalvm-ee-java11
          image: registry.hitnslab.com/dns-security/malicious-domain-rating/deeparcher/stream:dev-graalvm-ee-java11 # 容器镜像地址
          imagePullPolicy: Always # 或者填 IfNotPresent
          ports:
            - containerPort: 9999
              protocol: TCP
              name: jmx
          env:
            - name: JAVA_TOOL_OPTIONS
              value: -Xms100m -Xmx3g -XX:+UnlockExperimentalVMOptions -XX:+EagerJVMCI -Dgraal.MitigateSpeculativeExecutionAttacks=None -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Ddns.server=114.114.114.114,1.2.4.8,10.0.0.10
            - name: SPRING_KAFKA_SSL_KEY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kafka-user-aggregator
                  key: user.password
            - name: SPRING_KAFKA_SSL_TRUST_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: truststore
                  key: password
          resources:
            requests:
              cpu: 100m
              memory: 500Mi
            limits:
              cpu: '8'
              memory: 4.5Gi
          volumeMounts:
            - mountPath: /var/run/secrets/java.io/keystores/
              name: keystores
            - mountPath: /var/run/secrets/java.io/truststores/
              name: truststores
            - mountPath: /app/resources/application.yml
              name: config
              subPath: application.yml
      restartPolicy: Always
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      volumes:
        - name: keystores
          secret:
            secretName: kafka-user-aggregator
            defaultMode: 256
        - name: truststores
          secret:
            secretName: truststore
            defaultMode: 256
        - name: config
          configMap:
            name: stream-aggregator-full
            items:
              - key: application.yml
                path: application.yml
