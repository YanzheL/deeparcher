kind: ConfigMap
apiVersion: v1
metadata:
  name: stream-graph-builder-full
  namespace: default
  labels:
    app.kubernetes.io/name: stream-graph-builder-full
    app.kubernetes.io/part-of: deeparcher
    app.kubernetes.io/component: stream
data:
  application.yml: |-
    spring:
      data:
        mongodb:
          database: test
          username: # Inject it via env $SPRING_DATA_MONGODB_USERNAME
          password: # Inject it via env $SPRING_DATA_MONGODB_PASSWORD
          host: deeparcher-mongodb-sharded
          port: 27017
          authentication-database: admin
      kafka:
        bootstrap-servers:
          - kafka-kafka-bootstrap:9093
        ssl:
          protocol: TLSv1.3
          key-store-type: PKCS12
          key-store-location: file:///var/run/secrets/java.io/keystores/user.p12
          key-store-password: # Inject it via env $SPRING_KAFKA_SSL_KEY_STORE_PASSWORD
          trust-store-type: JKS
          trust-store-location: file:///var/run/secrets/java.io/truststores/ca.jks
          trust-store-password: # Inject it via env $SPRING_KAFKA_SSL_TRUST_STORE_PASSWORD
        properties:
          security.protocol: SSL
          ssl.enabled.protocols: TLSv1.3
          # ssl.endpoint.identification.algorithm: ""
          metadata.max.age.ms: 60000
          receive.buffer.bytes: 2097152
          delivery.timeout.ms: 1800000
        streams:
          application-id: stream-graph-builder-full
          state-dir: /tmp/kafka-stream
          replication-factor: 2
          auto-startup: true
          properties:
            topology.optimization: all
            num.stream.threads: 1
            consumer.max-poll-records: 5000000
            consumer.fetch-max-wait: 2000
            consumer.auto-offset-reset: earliest

    app:
      graph-builder:
        enabled: true
        cache-limit: 1000000
        commit-interval: 30
        node-id-service:
          database: analysis
          collection: domain_attributes
          key-field: fqdn
          value-field: graph_node_id
        input:
          type: topic
          path: domain.aggregate.full
        output:
          type: topic
          path: graph.event.full
          options:
            unique: false
