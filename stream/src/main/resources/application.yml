spring:
  #  autoconfigure:
  #    exclude: org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
  data:
    mongodb:
      database: test
      username: # Inject it via env $SPRING_DATA_MONGODB_USERNAME
      password: # Inject it via env $SPRING_DATA_MONGODB_PASSWORD
      host: deeparcher-mongodb-sharded
      port: 27017
      authentication-database: admin
  kafka:
    bootstrap-servers:
      - kafka-kafka-bootstrap:9093
    ssl:
      protocol: TLSv1.3
      key-store-type: PKCS12
      key-store-location: file:///tmp/kafka-user-test/user.p12
      key-store-password: h0IVo7v7EStE # Inject it via env $SPRING_KAFKA_SSL_KEY_STORE_PASSWORD
      trust-store-type: JKS
      trust-store-location: file:///tmp/kafka-user-test/ca.jks
      trust-store-password: 0abfa8f8-59fc-49cf-a294-555f755f7c0b # Inject it via env $SPRING_KAFKA_SSL_TRUST_STORE_PASSWORD
    properties:
      security.protocol: SSL
      ssl.enabled.protocols: TLSv1.3
      #      ssl.endpoint.identification.algorithm: ""
      metadata.max.age.ms: 60000
      receive.buffer.bytes: 2097152
      delivery.timeout.ms: 1800000
    streams:
      application-id: stream
      state-dir: /tmp/kafka-stream
      replication-factor: 2
      auto-startup: true
      properties:
        topology.optimization: all
        num.stream.threads: "${NUM_STREAM_THREADS:1}"
        #        producer.interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
        #        consumer.interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
        consumer.max-poll-records: 5000000
        consumer.fetch-max-wait: 2000
        consumer.auto-offset-reset: earliest

app:
  graph-builder:
    enabled: false
  aggregator:
    enabled: false
  whitelist-filter:
    enabled: false
